   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"task3.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "task3.c"
  20              		.section	.text.startup.main,"ax",%progbits
  21              		.align	1
  22              		.p2align 2,,3
  23              		.global	main
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  28              	main:
  29              	.LFB135:
   1:task3.c       **** #include <stdint.h>
   2:task3.c       **** #include <nrf.h>
   3:task3.c       **** #include <string.h>
   4:task3.c       **** #include <inttypes.h>
   5:task3.c       **** #include "printf.h"
   6:task3.c       **** 
   7:task3.c       **** // Forward declarations.
   8:task3.c       **** static void twi_write(uint8_t dev_addr, volatile uint8_t *tx_data, unsigned int n_tx_data);
   9:task3.c       **** static void twi_read(uint8_t dev_addr, volatile uint8_t *rx_buffer, unsigned int n_rx_data);
  10:task3.c       **** static void twi_write_read(uint8_t dev_addr, volatile uint8_t *tx_data, unsigned int n_tx_data, vol
  11:task3.c       **** static void wait_ms(uint16_t ms);
  12:task3.c       **** static void configure_timer(void);
  13:task3.c       **** static void configure_uart(void);
  14:task3.c       **** 
  15:task3.c       **** // Defines.
  16:task3.c       **** #define TICKS_PER_MS 63             // rounded (62,5)
  17:task3.c       **** #define DEV_ADDR UINT8_C(0x1D)      // device address according to datasheet
  18:task3.c       **** #define REG_CHIP_ID UINT8_C(0x0D)   // WHO_AM_I Register Address
  19:task3.c       **** #define REG_CONTROL UINT8_C(0x2A)   // Control register (0x2A)
  20:task3.c       **** #define MODE_INACTIVE UINT8_C(0x00) // Control mode inactive
  21:task3.c       **** #define MODE_ACTIVE UINT8_C(0x01)   // Control mode active
  22:task3.c       **** #define REG_CONFIG UINT8_C(0x0E)    // Configuration register (0x0E)
  23:task3.c       **** #define RANGE_2G UINT8_C(0x00)      // Set range +/- 2g (0x00)
  24:task3.c       **** #define REG_OUT_X_MSB UINT8_C(0x01) // Register address of OUT_X_MSB (0x01)
  25:task3.c       **** 
  26:task3.c       **** // Read and write buffers.
  27:task3.c       **** volatile static uint8_t write_buffer[2];
  28:task3.c       **** volatile static uint8_t read_buffer[6];
  29:task3.c       **** 
  30:task3.c       **** int main(void)
  31:task3.c       **** {
  30              		.loc 1 31 1 view -0
  31              		.cfi_startproc
  32              		@ Volatile: function does not return.
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  32:task3.c       ****     // Configure the UART peripheral for printf.
  33:task3.c       ****     configure_uart();
  35              		.loc 1 33 5 view .LVU1
  36              	.LBB17:
  37              	.LBI17:
  34:task3.c       ****     // Configure the TIMER peripheral for the wait_ms() function and an interrupt
  35:task3.c       ****     // every 0.5 seconds.
  36:task3.c       ****     configure_timer();
  37:task3.c       **** 
  38:task3.c       ****     //*************************************************************************
  39:task3.c       ****     //* I2C / TWI configuration.
  40:task3.c       ****     //*************************************************************************
  41:task3.c       **** 
  42:task3.c       ****     // Configure the PSEL.SCL register.
  43:task3.c       ****     NRF_TWIM0->PSEL.SCL = (27 << TWIM_PSEL_SCL_PIN_Pos) |
  44:task3.c       ****                           (0 << TWIM_PSEL_SCL_PORT_Pos) |
  45:task3.c       ****                           (TWIM_PSEL_SCL_CONNECT_Connected << TWIM_PSEL_SCL_CONNECT_Pos);
  46:task3.c       ****     // Configure the PSEL.SDA register.
  47:task3.c       ****     NRF_TWIM0->PSEL.SDA = (26 << TWIM_PSEL_SDA_PIN_Pos) |
  48:task3.c       ****                           (0 << TWIM_PSEL_SDA_PORT_Pos) |
  49:task3.c       ****                           (TWIM_PSEL_SDA_CONNECT_Connected << TWIM_PSEL_SDA_CONNECT_Pos);
  50:task3.c       ****     // Configure the FREQUENCY register.
  51:task3.c       ****     NRF_TWIM0->FREQUENCY = TWIM_FREQUENCY_FREQUENCY_K250 << TWIM_FREQUENCY_FREQUENCY_Pos;
  52:task3.c       **** 
  53:task3.c       ****     // Configure the GPIO pins used with the TWIM peripheral according to Table 124, page 473.
  54:task3.c       ****     NRF_P0->PIN_CNF[27] = (GPIO_PIN_CNF_DIR_Input << GPIO_PIN_CNF_DIR_Pos) |
  55:task3.c       ****                           (GPIO_PIN_CNF_INPUT_Connect << GPIO_PIN_CNF_INPUT_Pos) |
  56:task3.c       ****                           (GPIO_PIN_CNF_PULL_Pullup << GPIO_PIN_CNF_PULL_Pos) |
  57:task3.c       ****                           (GPIO_PIN_CNF_DRIVE_S0D1 << GPIO_PIN_CNF_DRIVE_Pos) |
  58:task3.c       ****                           (GPIO_PIN_CNF_SENSE_Disabled << GPIO_PIN_CNF_SENSE_Pos);
  59:task3.c       ****     NRF_P0->PIN_CNF[26] = (GPIO_PIN_CNF_DIR_Input << GPIO_PIN_CNF_DIR_Pos) |
  60:task3.c       ****                           (GPIO_PIN_CNF_INPUT_Connect << GPIO_PIN_CNF_INPUT_Pos) |
  61:task3.c       ****                           (GPIO_PIN_CNF_PULL_Pullup << GPIO_PIN_CNF_PULL_Pos) |
  62:task3.c       ****                           (GPIO_PIN_CNF_DRIVE_S0D1 << GPIO_PIN_CNF_DRIVE_Pos) |
  63:task3.c       ****                           (GPIO_PIN_CNF_SENSE_Disabled << GPIO_PIN_CNF_SENSE_Pos);
  64:task3.c       **** 
  65:task3.c       ****     // Store the address of the control register in our TX buffer.
  66:task3.c       ****     write_buffer[0] = REG_CONTROL;
  67:task3.c       ****     // Store the value representing the active operation mode in our TX buffer.
  68:task3.c       ****     write_buffer[1] = MODE_ACTIVE;
  69:task3.c       ****     // Write the buffer contents to the accelerometer.
  70:task3.c       ****     twi_write(DEV_ADDR, write_buffer, 2);
  71:task3.c       **** 
  72:task3.c       ****     // Store the address of the configuration register in our TX buffer.
  73:task3.c       ****     write_buffer[0] = REG_CONFIG;
  74:task3.c       ****     // Store the value representing the +/- 2g range in our TX buffer.
  75:task3.c       ****     write_buffer[1] = RANGE_2G;
  76:task3.c       ****     // Write the buffer contents to the accelerometer.
  77:task3.c       ****     twi_write(DEV_ADDR, write_buffer, 2);
  78:task3.c       **** 
  79:task3.c       ****     // Run forever.
  80:task3.c       ****     while (1)
  81:task3.c       ****     {
  82:task3.c       ****         // Go into a low power state (i.e., sleep) until an interrupt occurs
  83:task3.c       ****         // (WFI = "wait for interrupt" is a processor instruction).
  84:task3.c       ****         __WFI();
  85:task3.c       ****     }
  86:task3.c       **** }
  87:task3.c       **** 
  88:task3.c       **** // This is the interrupt service routine (ISR or IRQ) that is executed when a
  89:task3.c       **** // timer event occurs and interrupts are enables.
  90:task3.c       **** void TIMER1_IRQHandler(void)
  91:task3.c       **** {
  92:task3.c       ****     // Check if our specific event triggered the interrupt.
  93:task3.c       ****     if ((NRF_TIMER1->EVENTS_COMPARE[0] & TIMER_EVENTS_COMPARE_EVENTS_COMPARE_Msk) == TIMER_EVENTS_C
  94:task3.c       ****     {
  95:task3.c       ****         // Clear interrupt event.
  96:task3.c       ****         NRF_TIMER1->EVENTS_COMPARE[0] = TIMER_EVENTS_COMPARE_EVENTS_COMPARE_NotGenerated << TIMER_E
  97:task3.c       **** 
  98:task3.c       ****         // Store the address of the acceleration data (starts at register OUT_X_MSB)
  99:task3.c       ****         // in our TX buffer.
 100:task3.c       ****         write_buffer[0] = REG_OUT_X_MSB;
 101:task3.c       **** 
 102:task3.c       ****         // Write to the accelerometer in order to setup the read transfer.
 103:task3.c       ****         // Start a read transfer to receive 6 bytes of acceleration data.
 104:task3.c       ****         twi_write_read(DEV_ADDR, write_buffer, 1, read_buffer, 6);
 105:task3.c       **** 
 106:task3.c       ****         // Combine LSB and MSB sensor values for the X axis.
 107:task3.c       ****         uint16_t xval = read_buffer[0] << 4 | read_buffer[1] >> 4;
 108:task3.c       ****         int16_t accX = (xval > 2047) ? xval - 4096 : xval;
 109:task3.c       **** 
 110:task3.c       ****         // Combine LSB and MSB sensor values for the Y axis.
 111:task3.c       ****         uint16_t yval = read_buffer[2] << 4 | read_buffer[3] >> 4;
 112:task3.c       ****         int16_t accY = (yval > 2047) ? yval - 4096 : yval;
 113:task3.c       **** 
 114:task3.c       ****         // Combine LSB and MSB sensor values for the Z axis.
 115:task3.c       ****         uint16_t zval = read_buffer[4] << 4 | read_buffer[5] >> 4;
 116:task3.c       ****         int16_t accZ = (zval > 2047) ? zval - 4096 : zval;
 117:task3.c       **** 
 118:task3.c       ****         // Print acceleration values.
 119:task3.c       ****         printf("accX = %d   accY = %d   accZ = %d\n", accX, accY, accZ);
 120:task3.c       **** 
 121:task3.c       ****         // Stores last orientation.
 122:task3.c       ****         // 1: X UP, 2: X DOWN, 3: Y UP, 4: Y DOWN, 5: Z UP, 6: Z DOWN
 123:task3.c       ****         static uint8_t state;
 124:task3.c       **** 
 125:task3.c       ****         // Compute the current orientation.
 126:task3.c       ****         if (accX > 490)
 127:task3.c       ****         {
 128:task3.c       ****             if (state != 1)
 129:task3.c       ****             {
 130:task3.c       ****                 state = 1;
 131:task3.c       ****                 printf("X axis is UP!\n");
 132:task3.c       ****             }
 133:task3.c       ****         }
 134:task3.c       ****         else if (accX < -490)
 135:task3.c       ****         {
 136:task3.c       ****             if (state != 2)
 137:task3.c       ****             {
 138:task3.c       ****                 state = 2;
 139:task3.c       ****                 printf("X axis is DOWN!\n");
 140:task3.c       ****             }
 141:task3.c       ****         }
 142:task3.c       ****         else if (accY > 490)
 143:task3.c       ****         {
 144:task3.c       ****             if (state != 3)
 145:task3.c       ****             {
 146:task3.c       ****                 state = 3;
 147:task3.c       ****                 printf("Y axis is UP!\n");
 148:task3.c       ****             }
 149:task3.c       ****         }
 150:task3.c       ****         else if (accY < -490)
 151:task3.c       ****         {
 152:task3.c       ****             if (state != 4)
 153:task3.c       ****             {
 154:task3.c       ****                 state = 4;
 155:task3.c       ****                 printf("Y axis is DOWN!\n");
 156:task3.c       ****             }
 157:task3.c       ****         }
 158:task3.c       ****         else if (accZ > 490)
 159:task3.c       ****         {
 160:task3.c       ****             if (state != 5)
 161:task3.c       ****             {
 162:task3.c       ****                 state = 5;
 163:task3.c       ****                 printf("Z axis is UP!\n");
 164:task3.c       ****             }
 165:task3.c       ****         }
 166:task3.c       ****         else if (accZ < -490)
 167:task3.c       ****         {
 168:task3.c       ****             if (state != 6)
 169:task3.c       ****             {
 170:task3.c       ****                 state = 6;
 171:task3.c       ****                 printf("Z axis is DOWN!\n");
 172:task3.c       ****             }
 173:task3.c       ****         }
 174:task3.c       **** 
 175:task3.c       ****         // Clear to ensure the timer counter is 0.
 176:task3.c       ****         NRF_TIMER1->TASKS_CLEAR = TIMER_TASKS_CLEAR_TASKS_CLEAR_Trigger << TIMER_TASKS_CLEAR_TASKS_
 177:task3.c       ****         // Update the target count value to trigger the interrupt again after 0.5 seconds.
 178:task3.c       ****         NRF_TIMER1->CC[0] = 31250;
 179:task3.c       ****     }
 180:task3.c       **** }
 181:task3.c       **** 
 182:task3.c       **** // Write n_data bytes of the buffer pointed to by data to the slave device with
 183:task3.c       **** // the address dev_addr.
 184:task3.c       **** static void twi_write(uint8_t dev_addr, volatile uint8_t *tx_data, unsigned int n_tx_data)
 185:task3.c       **** {
 186:task3.c       ****     // Enable the TWIM peripheral.
 187:task3.c       ****     NRF_TWIM0->ENABLE = TWIM_ENABLE_ENABLE_Enabled << TWIM_ENABLE_ENABLE_Pos;
 188:task3.c       ****     // Set the shortcut to stop transmitting after the last byte.
 189:task3.c       ****     NRF_TWIM0->SHORTS = TWIM_SHORTS_LASTTX_STOP_Enabled << TWIM_SHORTS_LASTTX_STOP_Pos;
 190:task3.c       ****     // Set the device address in the ADDRESS register.
 191:task3.c       ****     NRF_TWIM0->ADDRESS = dev_addr;
 192:task3.c       ****     // Set the number of bytes we want to transmit.
 193:task3.c       ****     NRF_TWIM0->TXD.MAXCNT = n_tx_data;
 194:task3.c       ****     // Provide a pointer to a buffer where the transmit data is stored.
 195:task3.c       ****     NRF_TWIM0->TXD.PTR = (uint32_t)tx_data;
 196:task3.c       ****     // Clear events.
 197:task3.c       ****     NRF_TWIM0->EVENTS_STOPPED = TWIM_EVENTS_STOPPED_EVENTS_STOPPED_NotGenerated << TWIM_EVENTS_STOP
 198:task3.c       ****     NRF_TWIM0->EVENTS_ERROR = TWIM_EVENTS_ERROR_EVENTS_ERROR_NotGenerated << TWIM_EVENTS_ERROR_EVEN
 199:task3.c       **** 
 200:task3.c       ****     // Start transmit task.
 201:task3.c       ****     NRF_TWIM0->TASKS_STARTTX = TWIM_TASKS_STARTTX_TASKS_STARTTX_Trigger << TWIM_TASKS_STARTTX_TASKS
 202:task3.c       **** 
 203:task3.c       ****     // Wait until the TWIM peripheral has stopped (STOP event after the last byte).
 204:task3.c       ****     while (NRF_TWIM0->EVENTS_STOPPED != TWIM_EVENTS_STOPPED_EVENTS_STOPPED_Generated);
 205:task3.c       **** 
 206:task3.c       ****     // Disable the TWIM peripheral.
 207:task3.c       ****     NRF_TWIM0->ENABLE = TWIM_ENABLE_ENABLE_Disabled << TWIM_ENABLE_ENABLE_Pos;
 208:task3.c       **** }
 209:task3.c       **** 
 210:task3.c       **** // Read n_data bytes from the slave device with the address dev_addr and store the
 211:task3.c       **** // data at the location pointed to by buffer.
 212:task3.c       **** static void twi_read(uint8_t dev_addr, volatile uint8_t *rx_buffer, unsigned int n_rx_data)
 213:task3.c       **** {
 214:task3.c       ****     // Enable the TWIM peripheral.
 215:task3.c       ****     NRF_TWIM0->ENABLE = TWIM_ENABLE_ENABLE_Enabled << TWIM_ENABLE_ENABLE_Pos;
 216:task3.c       ****     // Set the shortcut to stop receiving after the last byte.
 217:task3.c       ****     NRF_TWIM0->SHORTS = TWIM_SHORTS_LASTRX_STOP_Enabled << TWIM_SHORTS_LASTRX_STOP_Pos;
 218:task3.c       ****     // Set the device address in the ADDRESS register.
 219:task3.c       ****     NRF_TWIM0->ADDRESS = dev_addr;
 220:task3.c       ****     // Set the number of bytes we want to receive.
 221:task3.c       ****     NRF_TWIM0->RXD.MAXCNT = n_rx_data;
 222:task3.c       ****     // Provide a pointer to a buffer where the received data can be stored.
 223:task3.c       ****     NRF_TWIM0->RXD.PTR = (uint32_t)rx_buffer;
 224:task3.c       ****     // Clear events.
 225:task3.c       ****     NRF_TWIM0->EVENTS_STOPPED = TWIM_EVENTS_STOPPED_EVENTS_STOPPED_NotGenerated << TWIM_EVENTS_STOP
 226:task3.c       ****     NRF_TWIM0->EVENTS_ERROR = TWIM_EVENTS_ERROR_EVENTS_ERROR_NotGenerated << TWIM_EVENTS_ERROR_EVEN
 227:task3.c       **** 
 228:task3.c       ****     // Start receive task.
 229:task3.c       ****     NRF_TWIM0->TASKS_STARTRX = TWIM_TASKS_STARTRX_TASKS_STARTRX_Trigger << TWIM_TASKS_STARTRX_TASKS
 230:task3.c       **** 
 231:task3.c       ****     // Wait until the TWIM peripheral has stopped (STOP event after the last byte).
 232:task3.c       ****     while (NRF_TWIM0->EVENTS_STOPPED != TWIM_EVENTS_STOPPED_EVENTS_STOPPED_Generated);
 233:task3.c       **** 
 234:task3.c       ****     // Disable the TWIM peripheral.
 235:task3.c       ****     NRF_TWIM0->ENABLE = TWIM_ENABLE_ENABLE_Disabled << TWIM_ENABLE_ENABLE_Pos;
 236:task3.c       **** }
 237:task3.c       **** 
 238:task3.c       **** // Write n_data bytes of the buffer pointed to by data to the slave device with
 239:task3.c       **** // the address dev_addr without sending the stop condition.
 240:task3.c       **** // Then read n_data bytes from the slave device with the address dev_addr and store the
 241:task3.c       **** // data at the location pointed to by buffer.
 242:task3.c       **** static void twi_write_read(uint8_t dev_addr, volatile uint8_t *tx_data, unsigned int n_tx_data, vol
 243:task3.c       **** {
 244:task3.c       ****     // Enable the TWIM peripheral.
 245:task3.c       ****     NRF_TWIM0->ENABLE = TWIM_ENABLE_ENABLE_Enabled << TWIM_ENABLE_ENABLE_Pos;
 246:task3.c       ****     // Set the shortcut to start receiving after the last byte is transmitted
 247:task3.c       ****     // and to stop receiving after the last byte.
 248:task3.c       ****     NRF_TWIM0->SHORTS = TWIM_SHORTS_LASTTX_STARTRX_Enabled << TWIM_SHORTS_LASTTX_STARTRX_Pos |
 249:task3.c       ****                         TWIM_SHORTS_LASTRX_STOP_Enabled << TWIM_SHORTS_LASTRX_STOP_Pos;
 250:task3.c       ****     // Set the device address in the ADDRESS register.
 251:task3.c       ****     NRF_TWIM0->ADDRESS = dev_addr;
 252:task3.c       ****     // Set the number of bytes we want to transmit.
 253:task3.c       ****     NRF_TWIM0->TXD.MAXCNT = n_tx_data;
 254:task3.c       ****     // Provide a pointer to a buffer where the transmit data is stored.
 255:task3.c       ****     NRF_TWIM0->TXD.PTR = (uint32_t)tx_data;
 256:task3.c       ****     // Set the number of bytes we want to receive.
 257:task3.c       ****     NRF_TWIM0->RXD.MAXCNT = n_rx_data;
 258:task3.c       ****     // Provide a pointer to a buffer where the received data can be stored.
 259:task3.c       ****     NRF_TWIM0->RXD.PTR = (uint32_t)rx_buffer;
 260:task3.c       ****     // Clear events.
 261:task3.c       ****     NRF_TWIM0->EVENTS_STOPPED = TWIM_EVENTS_STOPPED_EVENTS_STOPPED_NotGenerated << TWIM_EVENTS_STOP
 262:task3.c       ****     NRF_TWIM0->EVENTS_ERROR = TWIM_EVENTS_ERROR_EVENTS_ERROR_NotGenerated << TWIM_EVENTS_ERROR_EVEN
 263:task3.c       **** 
 264:task3.c       ****     // Start transmit task.
 265:task3.c       ****     NRF_TWIM0->TASKS_STARTTX = TWIM_TASKS_STARTTX_TASKS_STARTTX_Trigger << TWIM_TASKS_STARTTX_TASKS
 266:task3.c       **** 
 267:task3.c       ****     // Wait until the TWIM peripheral has stopped (STOP event after the last byte).
 268:task3.c       ****     while (NRF_TWIM0->EVENTS_STOPPED != TWIM_EVENTS_STOPPED_EVENTS_STOPPED_Generated);
 269:task3.c       **** 
 270:task3.c       ****     // Disable the TWIM peripheral.
 271:task3.c       ****     NRF_TWIM0->ENABLE = TWIM_ENABLE_ENABLE_Disabled << TWIM_ENABLE_ENABLE_Pos;
 272:task3.c       **** }
 273:task3.c       **** 
 274:task3.c       **** //*************************************************************************
 275:task3.c       **** //* UART configuration.
 276:task3.c       **** //* 	- TX GPIO pin connection: P0.06
 277:task3.c       **** //* 	- baudrate: 115200 Baud (bit/s)
 278:task3.c       **** //* 	- hardware flow control: disabled
 279:task3.c       **** //* 	- stop bit(s): 1
 280:task3.c       **** //* 	- with no parity
 281:task3.c       **** //*************************************************************************
 282:task3.c       **** static void configure_uart(void)
  38              		.loc 1 282 13 view .LVU2
  39              	.LBB18:
 283:task3.c       **** {
 284:task3.c       ****     NRF_UART0->PSEL.TXD = (6 << UART_PSEL_TXD_PIN_Pos) |
  40              		.loc 1 284 5 view .LVU3
  41              		.loc 1 284 25 is_stmt 0 view .LVU4
  42 0000 3F48     		ldr	r0, .L9
 285:task3.c       ****                           (0 << UART_PSEL_TXD_PORT_Pos) |
 286:task3.c       ****                           (UART_PSEL_TXD_CONNECT_Connected << UART_PSEL_TXD_CONNECT_Pos);
 287:task3.c       ****     NRF_UART0->BAUDRATE = UART_BAUDRATE_BAUDRATE_Baud115200 << UART_BAUDRATE_BAUDRATE_Pos;
  43              		.loc 1 287 25 view .LVU5
  44 0002 404C     		ldr	r4, .L9+4
  45              	.LBE18:
  46              	.LBE17:
  47              	.LBB22:
  48              	.LBB23:
 288:task3.c       ****     NRF_UART0->CONFIG = (UART_CONFIG_HWFC_Disabled << UART_CONFIG_HWFC_Pos) |
 289:task3.c       ****                         (UART_CONFIG_PARITY_Excluded << UART_CONFIG_PARITY_Pos) |
 290:task3.c       ****                         (UART_CONFIG_STOP_One << UART_CONFIG_STOP_Pos);
 291:task3.c       **** 
 292:task3.c       ****     // Configure the TX GPIO pin according to Table 132, page 503.
 293:task3.c       ****     NRF_P0->PIN_CNF[6] = (GPIO_PIN_CNF_DIR_Output << GPIO_PIN_CNF_DIR_Pos) |
 294:task3.c       ****                          (GPIO_PIN_CNF_INPUT_Disconnect << GPIO_PIN_CNF_INPUT_Pos) |
 295:task3.c       ****                          (GPIO_PIN_CNF_PULL_Disabled << GPIO_PIN_CNF_PULL_Pos) |
 296:task3.c       ****                          (GPIO_PIN_CNF_DRIVE_S0S1 << GPIO_PIN_CNF_DRIVE_Pos) |
 297:task3.c       ****                          (GPIO_PIN_CNF_SENSE_Disabled << GPIO_PIN_CNF_SENSE_Pos);
 298:task3.c       **** 
 299:task3.c       ****     // Set the output value of the GPIO pin (UART idle state).
 300:task3.c       ****     NRF_P0->OUTSET = GPIO_OUTSET_PIN6_Set << GPIO_OUTSET_PIN6_Pos;
 301:task3.c       **** }
 302:task3.c       **** 
 303:task3.c       **** //*************************************************************************
 304:task3.c       **** //* Timer0 configuration:
 305:task3.c       **** //* 	- frequency: 62.500 Hz
 306:task3.c       **** //* 	- bit width: 16 bit = 65.536
 307:task3.c       **** //
 308:task3.c       **** //* Timer1 configuration:
 309:task3.c       **** //* 	- frequency: 62.500 Hz
 310:task3.c       **** //* 	- bit width: 16 bit = 65.536
 311:task3.c       **** //*     - interrupts are enabled and trigger every 0.5 seconds
 312:task3.c       **** //*************************************************************************
 313:task3.c       **** static void configure_timer(void)
 314:task3.c       **** {
 315:task3.c       ****     NRF_TIMER0->MODE = TIMER_MODE_MODE_Timer << TIMER_MODE_MODE_Pos;
  49              		.loc 1 315 22 view .LVU6
  50 0004 404B     		ldr	r3, .L9+8
 316:task3.c       ****     NRF_TIMER0->BITMODE = TIMER_BITMODE_BITMODE_16Bit << TIMER_BITMODE_BITMODE_Pos;
 317:task3.c       ****     NRF_TIMER0->PRESCALER = 8 << TIMER_PRESCALER_PRESCALER_Pos; // f_TIMER = 62.5 kHz
 318:task3.c       **** 
 319:task3.c       ****     NRF_TIMER1->MODE = TIMER_MODE_MODE_Timer << TIMER_MODE_MODE_Pos;
  51              		.loc 1 319 22 view .LVU7
  52 0006 4149     		ldr	r1, .L9+12
  53              	.LBE23:
  54              	.LBE22:
  55              	.LBB29:
  56              	.LBB19:
 293:task3.c       ****                          (GPIO_PIN_CNF_INPUT_Disconnect << GPIO_PIN_CNF_INPUT_Pos) |
  57              		.loc 1 293 24 view .LVU8
  58 0008 4FF0A04C 		mov	ip, #1342177280
 284:task3.c       ****                           (0 << UART_PSEL_TXD_PORT_Pos) |
  59              		.loc 1 284 25 view .LVU9
  60 000c 0626     		movs	r6, #6
  61              	.LBE19:
  62              	.LBE29:
  31:task3.c       ****     // Configure the UART peripheral for printf.
  63              		.loc 1 31 1 view .LVU10
  64 000e 80B5     		push	{r7, lr}
  65              		.cfi_def_cfa_offset 8
  66              		.cfi_offset 7, -8
  67              		.cfi_offset 14, -4
  68              	.LBB30:
  69              	.LBB20:
 288:task3.c       ****                         (UART_CONFIG_PARITY_Excluded << UART_CONFIG_PARITY_Pos) |
  70              		.loc 1 288 23 view .LVU11
  71 0010 0022     		movs	r2, #0
 284:task3.c       ****                           (0 << UART_PSEL_TXD_PORT_Pos) |
  72              		.loc 1 284 25 view .LVU12
  73 0012 C0F80C65 		str	r6, [r0, #1292]
 287:task3.c       ****     NRF_UART0->CONFIG = (UART_CONFIG_HWFC_Disabled << UART_CONFIG_HWFC_Pos) |
  74              		.loc 1 287 5 is_stmt 1 view .LVU13
 287:task3.c       ****     NRF_UART0->CONFIG = (UART_CONFIG_HWFC_Disabled << UART_CONFIG_HWFC_Pos) |
  75              		.loc 1 287 25 is_stmt 0 view .LVU14
  76 0016 C0F82445 		str	r4, [r0, #1316]
 288:task3.c       ****                         (UART_CONFIG_PARITY_Excluded << UART_CONFIG_PARITY_Pos) |
  77              		.loc 1 288 5 is_stmt 1 view .LVU15
 293:task3.c       ****                          (GPIO_PIN_CNF_INPUT_Disconnect << GPIO_PIN_CNF_INPUT_Pos) |
  78              		.loc 1 293 24 is_stmt 0 view .LVU16
  79 001a 0324     		movs	r4, #3
 288:task3.c       ****                         (UART_CONFIG_PARITY_Excluded << UART_CONFIG_PARITY_Pos) |
  80              		.loc 1 288 23 view .LVU17
  81 001c C0F86C25 		str	r2, [r0, #1388]
 293:task3.c       ****                          (GPIO_PIN_CNF_INPUT_Disconnect << GPIO_PIN_CNF_INPUT_Pos) |
  82              		.loc 1 293 5 is_stmt 1 view .LVU18
 293:task3.c       ****                          (GPIO_PIN_CNF_INPUT_Disconnect << GPIO_PIN_CNF_INPUT_Pos) |
  83              		.loc 1 293 24 is_stmt 0 view .LVU19
  84 0020 CCF81847 		str	r4, [ip, #1816]
 300:task3.c       **** }
  85              		.loc 1 300 5 is_stmt 1 view .LVU20
  86              	.LBE20:
  87              	.LBE30:
  88              	.LBB31:
  89              	.LBB26:
 317:task3.c       **** 
  90              		.loc 1 317 27 is_stmt 0 view .LVU21
  91 0024 0820     		movs	r0, #8
  92              	.LBE26:
  93              	.LBE31:
  94              	.LBB32:
  95              	.LBB21:
 300:task3.c       **** }
  96              		.loc 1 300 20 view .LVU22
  97 0026 4024     		movs	r4, #64
  98 0028 CCF80845 		str	r4, [ip, #1288]
  99              	.LBE21:
 100              	.LBE32:
  36:task3.c       **** 
 101              		.loc 1 36 5 is_stmt 1 view .LVU23
 102              	.LBB33:
 103              	.LBI22:
 313:task3.c       **** {
 104              		.loc 1 313 13 view .LVU24
 105              	.LBB27:
 315:task3.c       ****     NRF_TIMER0->BITMODE = TIMER_BITMODE_BITMODE_16Bit << TIMER_BITMODE_BITMODE_Pos;
 106              		.loc 1 315 5 view .LVU25
 315:task3.c       ****     NRF_TIMER0->BITMODE = TIMER_BITMODE_BITMODE_16Bit << TIMER_BITMODE_BITMODE_Pos;
 107              		.loc 1 315 22 is_stmt 0 view .LVU26
 108 002c C3F80425 		str	r2, [r3, #1284]
 316:task3.c       ****     NRF_TIMER0->PRESCALER = 8 << TIMER_PRESCALER_PRESCALER_Pos; // f_TIMER = 62.5 kHz
 109              		.loc 1 316 5 is_stmt 1 view .LVU27
 316:task3.c       ****     NRF_TIMER0->PRESCALER = 8 << TIMER_PRESCALER_PRESCALER_Pos; // f_TIMER = 62.5 kHz
 110              		.loc 1 316 25 is_stmt 0 view .LVU28
 111 0030 C3F80825 		str	r2, [r3, #1288]
 317:task3.c       **** 
 112              		.loc 1 317 5 is_stmt 1 view .LVU29
 317:task3.c       **** 
 113              		.loc 1 317 27 is_stmt 0 view .LVU30
 114 0034 C3F81005 		str	r0, [r3, #1296]
 115              		.loc 1 319 5 is_stmt 1 view .LVU31
 320:task3.c       ****     NRF_TIMER1->BITMODE = TIMER_BITMODE_BITMODE_16Bit << TIMER_BITMODE_BITMODE_Pos;
 321:task3.c       ****     NRF_TIMER1->PRESCALER = 8 << TIMER_PRESCALER_PRESCALER_Pos; // f_TIMER = 62.5 kHz
 322:task3.c       **** 
 323:task3.c       ****     // Enable interrupts for timer events.
 324:task3.c       ****     NRF_TIMER1->INTENSET = TIMER_INTENSET_COMPARE0_Set << TIMER_INTENSET_COMPARE0_Pos;
 116              		.loc 1 324 26 is_stmt 0 view .LVU32
 117 0038 4FF48033 		mov	r3, #65536
 319:task3.c       ****     NRF_TIMER1->BITMODE = TIMER_BITMODE_BITMODE_16Bit << TIMER_BITMODE_BITMODE_Pos;
 118              		.loc 1 319 22 view .LVU33
 119 003c C1F80425 		str	r2, [r1, #1284]
 320:task3.c       ****     NRF_TIMER1->BITMODE = TIMER_BITMODE_BITMODE_16Bit << TIMER_BITMODE_BITMODE_Pos;
 120              		.loc 1 320 5 is_stmt 1 view .LVU34
 320:task3.c       ****     NRF_TIMER1->BITMODE = TIMER_BITMODE_BITMODE_16Bit << TIMER_BITMODE_BITMODE_Pos;
 121              		.loc 1 320 25 is_stmt 0 view .LVU35
 122 0040 C1F80825 		str	r2, [r1, #1288]
 321:task3.c       **** 
 123              		.loc 1 321 5 is_stmt 1 view .LVU36
 321:task3.c       **** 
 124              		.loc 1 321 27 is_stmt 0 view .LVU37
 125 0044 C1F81005 		str	r0, [r1, #1296]
 126              		.loc 1 324 5 is_stmt 1 view .LVU38
 127              		.loc 1 324 26 is_stmt 0 view .LVU39
 128 0048 C1F80433 		str	r3, [r1, #772]
 325:task3.c       ****     // Enable interrupts for the timer peripheral in the interrupt controller.
 326:task3.c       ****     NVIC_EnableIRQ(TIMER1_IRQn);
 129              		.loc 1 326 5 is_stmt 1 view .LVU40
 130              	.LVL0:
 131              	.LBB24:
 132              	.LBI24:
 133              		.file 2 "./CMSIS_5/CMSIS/Core/Include/core_cm4.h"
   1:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**************************************************************************//**
   2:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * @file     core_cm4.h
   3:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * @version  V5.2.0
   5:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * @date     04. April 2023
   6:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  ******************************************************************************/
   7:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*
   8:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * Copyright (c) 2009-2023 Arm Limited. All rights reserved.
   9:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  *
  10:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  *
  12:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * You may obtain a copy of the License at
  15:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  *
  16:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  *
  18:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  * limitations under the License.
  23:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
  24:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  25:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined (__clang__)
  28:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
  30:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  31:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  34:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #include <stdint.h>
  35:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  36:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifdef __cplusplus
  37:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  extern "C" {
  38:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
  39:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  40:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
  41:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  44:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  47:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  50:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
  53:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  54:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  55:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*******************************************************************************
  56:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  *                 CMSIS definitions
  57:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  ******************************************************************************/
  58:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
  59:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup Cortex_M4
  60:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
  61:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
  62:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  63:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #include "cmsis_version.h"
  64:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  65:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  71:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  73:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** */
  76:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #if defined ( __CC_ARM )
  77:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
  80:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
  81:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
  83:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
  84:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
  85:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
  86:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
  87:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
  88:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if defined __ARM_FP
  90:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
  92:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
  93:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
  95:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
  96:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
  97:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
  98:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
  99:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 100:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined (__ti__)
 101:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if defined (__ARM_FP)
 102:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
 104:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
 105:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 106:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
 107:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
 108:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
 109:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
 110:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 111:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 112:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 113:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 114:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
 116:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
 117:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
 119:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
 120:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
 121:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
 122:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 123:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 124:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 125:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if defined __ARMVFP__
 126:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
 129:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
 132:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
 133:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 135:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 136:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 137:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 138:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
 141:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
 144:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
 145:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 147:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 148:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 149:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if defined __FPU_VFP__
 150:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
 153:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
 156:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
 157:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 159:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 160:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 161:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 162:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 163:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       1U
 164:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #else
 165:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 166:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****       #define __FPU_USED       0U
 167:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #endif
 168:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #else
 169:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_USED         0U
 170:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 171:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 172:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
 173:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 174:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 175:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 176:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 177:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifdef __cplusplus
 178:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
 179:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
 180:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 181:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 182:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 183:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 184:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 185:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 186:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 187:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 188:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifdef __cplusplus
 189:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  extern "C" {
 190:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
 191:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 192:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* check device defines and use defaults */
 193:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 194:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef __CM4_REV
 195:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 196:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 197:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 198:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 199:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 200:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 201:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 202:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 203:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 204:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 205:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 206:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 207:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 208:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 209:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef __VTOR_PRESENT
 210:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __VTOR_PRESENT             1U
 211:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
 212:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 213:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 214:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 215:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 216:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 217:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 218:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 219:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 220:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 221:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 222:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
 223:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
 224:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 225:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 226:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 227:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 228:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 229:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 230:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 231:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 232:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** */
 233:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifdef __cplusplus
 234:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 235:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #else
 236:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 237:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
 238:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 239:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 240:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 241:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* following defines should be used for structure members */
 242:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 243:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 244:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 245:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 246:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 247:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 248:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 249:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 250:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*******************************************************************************
 251:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  *                 Register Abstraction
 252:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   Core Register contain:
 253:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core Register
 254:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core NVIC Register
 255:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core SCB Register
 256:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core SysTick Register
 257:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core Debug Register
 258:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core MPU Register
 259:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core FPU Register
 260:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  ******************************************************************************/
 261:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 262:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 263:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 264:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** */
 265:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 266:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 267:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 268:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 269:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief      Core Register type definitions.
 270:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
 271:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 272:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 273:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 274:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 275:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 276:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef union
 277:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 278:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   struct
 279:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 280:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 281:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 282:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 283:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 284:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 285:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 286:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 287:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 288:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 289:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 290:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } APSR_Type;
 291:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 292:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* APSR Register Definitions */
 293:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 294:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 295:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 296:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 297:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 298:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 299:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 300:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 301:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 302:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 303:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 304:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 305:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 306:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 307:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 308:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 309:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 310:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 311:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 312:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 313:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 314:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 315:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef union
 316:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 317:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   struct
 318:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 319:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 320:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 321:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 322:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 323:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } IPSR_Type;
 324:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 325:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* IPSR Register Definitions */
 326:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 327:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 328:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 329:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 330:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 331:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 332:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 333:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef union
 334:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 335:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   struct
 336:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 337:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 338:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 339:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 340:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 341:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 342:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 343:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 344:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 345:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 346:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 347:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 348:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 349:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 350:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 351:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } xPSR_Type;
 352:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 353:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* xPSR Register Definitions */
 354:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 355:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 356:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 357:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 358:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 359:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 360:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 361:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 362:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 363:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 364:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 365:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 366:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 367:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 368:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 369:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 370:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 371:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 372:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 373:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 374:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 375:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 376:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 377:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 378:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 379:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 380:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 381:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 382:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 383:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 384:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 385:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 386:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 387:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 388:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef union
 389:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 390:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   struct
 391:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 392:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 393:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 394:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 395:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 396:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 397:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 398:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } CONTROL_Type;
 399:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 400:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* CONTROL Register Definitions */
 401:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 402:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 403:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 404:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 405:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 406:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 407:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 408:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 409:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 410:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 411:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 412:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 413:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 414:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 415:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 416:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 417:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
 418:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 419:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 420:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 421:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 422:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 423:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
 424:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 425:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 426:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 427:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 428:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED1[24U];
 429:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 430:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 431:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 432:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 433:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 434:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 435:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 436:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 437:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 438:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }  NVIC_Type;
 439:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 440:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 441:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 442:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 443:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 444:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 445:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 446:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 447:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 448:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 449:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 450:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 451:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
 452:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 453:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 454:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 455:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 456:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 457:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
 458:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 459:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 460:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 461:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 462:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 463:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 464:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 465:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 466:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 467:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 468:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 469:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 470:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 471:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 472:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 473:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 474:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 475:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 476:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 477:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 478:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 479:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 480:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } SCB_Type;
 481:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 482:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 483:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 484:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 485:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 486:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 487:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 488:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 489:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 490:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 491:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 492:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 493:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 494:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 495:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 496:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 497:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 498:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 499:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 500:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 501:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 502:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 503:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 504:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 505:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 506:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 507:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 508:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 509:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 510:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 511:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 512:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 513:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 514:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 515:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 516:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 517:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 518:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 519:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 520:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 521:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 522:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 523:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 524:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 525:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 526:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 527:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 528:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 529:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 530:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 531:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 532:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 533:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 534:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 535:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 536:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 537:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 538:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 539:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 540:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 541:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 542:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 543:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 544:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 545:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 546:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 547:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 548:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 549:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 550:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 551:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 552:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 553:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 554:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 555:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 556:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 557:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 558:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 559:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 560:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 561:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 562:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 563:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 564:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 565:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 566:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 567:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 568:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 569:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 570:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 571:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 572:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 573:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 574:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 575:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 576:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 577:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 578:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 579:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 580:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 581:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 582:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 583:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 584:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 585:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 586:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 587:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 588:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 589:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 590:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 591:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 592:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 593:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 594:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 595:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 596:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 597:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 598:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 599:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 600:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 601:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 602:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 603:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 604:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 605:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 606:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 607:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 608:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 609:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 610:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 611:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 612:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 613:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 614:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 615:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 616:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 617:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 618:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 619:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 620:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 621:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 622:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 623:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 624:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 625:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 626:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 627:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 628:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 629:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 630:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 631:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 632:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 633:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 634:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 635:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 636:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 637:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 638:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_CFSR_MEMFAULTSR_Pos + 7U)                 /*!< SCB 
 639:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 640:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 641:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_CFSR_MEMFAULTSR_Pos + 5U)                 /*!< SCB 
 642:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 643:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 644:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_CFSR_MEMFAULTSR_Pos + 4U)                 /*!< SCB 
 645:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 646:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 647:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_CFSR_MEMFAULTSR_Pos + 3U)                 /*!< SCB 
 648:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 649:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 650:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_CFSR_MEMFAULTSR_Pos + 1U)                 /*!< SCB 
 651:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 652:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 653:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_CFSR_MEMFAULTSR_Pos + 0U)                 /*!< SCB 
 654:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 655:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 656:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 657:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 658:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 659:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 660:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 661:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 662:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 663:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 664:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 665:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 666:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 667:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 668:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 669:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 670:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 671:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 672:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 673:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 674:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 675:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 676:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 677:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 678:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 679:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 680:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 681:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 682:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 683:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 684:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 685:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 686:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 687:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 688:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 689:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 690:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 691:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 692:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 693:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 694:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 695:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 696:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 697:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 698:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 699:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 700:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 701:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 702:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 703:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 704:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 705:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 706:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 707:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 708:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 709:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 710:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 711:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 712:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 713:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 714:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 715:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 716:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 717:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 718:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 719:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 720:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 721:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 722:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 723:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 724:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 725:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 726:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 727:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 728:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 729:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 730:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
 731:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 732:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 733:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 734:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 735:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 736:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
 737:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 738:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 739:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 740:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 741:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } SCnSCB_Type;
 742:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 743:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 744:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 745:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 746:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 747:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 748:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 749:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 750:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 751:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 752:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 753:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 754:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 755:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 756:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 757:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 758:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 759:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 760:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 761:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 762:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 763:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 764:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 765:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 766:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 767:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 768:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 769:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 770:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
 771:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 772:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 773:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 774:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 775:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 776:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
 777:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 778:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 779:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 780:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 781:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 782:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } SysTick_Type;
 783:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 784:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 785:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 786:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 787:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 788:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 789:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 790:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 791:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 792:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 793:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 794:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 795:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 796:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 797:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 798:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 799:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 800:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 801:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 802:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 803:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 804:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 805:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 806:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 807:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 808:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 809:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 810:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 811:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 812:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 813:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 814:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 815:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 816:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 817:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 818:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 819:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 820:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 821:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 822:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
 823:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 824:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 825:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 826:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 827:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 828:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
 829:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 830:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __OM  union
 831:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
 832:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 833:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 834:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 835:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 836:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 837:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 838:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 839:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 840:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 841:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 842:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED3[32U];
 843:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 844:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 845:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 846:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 847:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 848:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 849:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 850:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 851:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 852:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 853:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 854:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 855:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 856:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 857:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 858:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 859:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } ITM_Type;
 860:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 861:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 862:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 863:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 864:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 865:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 866:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 867:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 868:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 869:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TRACEBUSID_Pos             16U                                            /*!< ITM 
 870:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TRACEBUSID_Msk             (0x7FUL << ITM_TCR_TRACEBUSID_Pos)             /*!< ITM 
 871:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 872:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 873:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 874:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 875:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TSPRESCALE_Pos              8U                                            /*!< ITM 
 876:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TSPRESCALE_Msk             (3UL << ITM_TCR_TSPRESCALE_Pos)                /*!< ITM 
 877:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 878:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 879:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 880:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 881:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 882:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 883:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 884:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 885:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 886:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 887:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 888:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 889:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 890:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 891:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 892:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 893:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 894:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_BYTEACC_Pos                 2U                                            /*!< ITM 
 895:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_BYTEACC_Msk                (1UL << ITM_LSR_BYTEACC_Pos)                   /*!< ITM 
 896:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 897:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_ACCESS_Pos                  1U                                            /*!< ITM 
 898:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_ACCESS_Msk                 (1UL << ITM_LSR_ACCESS_Pos)                    /*!< ITM 
 899:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 900:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_PRESENT_Pos                 0U                                            /*!< ITM 
 901:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_PRESENT_Msk                (1UL /*<< ITM_LSR_PRESENT_Pos*/)               /*!< ITM 
 902:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 903:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 904:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 905:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 906:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 907:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 908:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 909:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 910:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
 911:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 912:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 913:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
 914:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 915:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
 916:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
 917:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
 918:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 919:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 920:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 921:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 922:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 923:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 924:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 925:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 926:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 927:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 928:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 929:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 930:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 931:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 932:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 933:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 934:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 935:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 936:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 937:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 938:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 939:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 940:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 941:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } DWT_Type;
 942:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 943:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT Control Register Definitions */
 944:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 945:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 946:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 947:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 948:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 949:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 950:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 951:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 952:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 953:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 954:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 955:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 956:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 957:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 958:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 959:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 960:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 961:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 962:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 963:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 964:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 965:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 966:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 967:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 968:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 969:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 970:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 971:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 972:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 973:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 974:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 975:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 976:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 977:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 978:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 979:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 980:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 981:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 982:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 983:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 984:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 985:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 986:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 987:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 988:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 989:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 990:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 991:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 992:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 993:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 994:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 995:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 996:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 997:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
 998:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 999:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1000:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1001:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1002:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
1003:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1004:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1005:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1006:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
1007:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1008:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1009:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1010:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
1011:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1012:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1013:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1014:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1015:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1016:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1017:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1018:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1019:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1020:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1021:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1022:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1023:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1024:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1025:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1026:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1027:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1028:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1029:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1030:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1031:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1032:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1033:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1034:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1035:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1036:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1037:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1038:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1039:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1040:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1041:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1042:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1043:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1044:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1045:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1046:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1047:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1048:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1049:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1050:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1051:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1052:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1053:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1054:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1055:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1056:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1057:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1058:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1059:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1060:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1061:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1062:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1063:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
1064:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1065:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1066:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1067:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1068:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1069:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1070:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1071:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1072:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1073:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1074:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1075:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1076:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1077:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1078:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1079:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1080:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1081:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1082:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1083:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1084:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1085:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1086:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1087:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1088:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1089:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } TPI_Type;
1090:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1091:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1092:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1093:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1094:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1095:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1096:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1097:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1098:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1099:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1100:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1101:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1102:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1103:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1104:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1105:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1106:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1107:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1108:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1109:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1110:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1111:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1112:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1113:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1114:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1115:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1116:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1117:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1118:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1119:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1120:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1121:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1122:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1123:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1124:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1125:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1126:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1127:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1128:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1129:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1130:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1131:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1132:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1133:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1134:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1135:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1136:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1137:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1138:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1139:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1140:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1141:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1142:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1143:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1144:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1145:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1146:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1147:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1148:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1149:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1150:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1151:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1152:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1153:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1154:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1155:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1156:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1157:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1158:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1159:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1160:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1161:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1162:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1163:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1164:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1165:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1166:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1167:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1168:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1169:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1170:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1171:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1172:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1173:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1174:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1175:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1176:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1177:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1178:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1179:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1180:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1181:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1182:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1183:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1184:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1185:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1186:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1187:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1188:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1189:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1190:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1191:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1192:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1193:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1194:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1195:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1196:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1197:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1198:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1199:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1200:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1201:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1202:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1203:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1204:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1205:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1206:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1207:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1208:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1209:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1210:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1211:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1212:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1213:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1214:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1215:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1216:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1217:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1218:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1219:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1220:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1221:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1222:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1223:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1224:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1225:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
1226:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1227:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1228:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1229:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1230:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1231:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1232:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1233:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1234:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1235:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1236:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1237:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1238:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } MPU_Type;
1239:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1240:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1241:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1242:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* MPU Type Register Definitions */
1243:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1244:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1245:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1246:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1247:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1248:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1249:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1250:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1251:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1252:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* MPU Control Register Definitions */
1253:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1254:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1255:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1256:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1257:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1258:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1259:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1260:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1261:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1262:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1263:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1264:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1265:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1266:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1267:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1268:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1269:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1270:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1271:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1272:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1273:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1274:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1275:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1276:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1277:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1278:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1279:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1280:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1281:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1282:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1283:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1284:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1285:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1286:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1287:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1288:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1289:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1290:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1291:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1292:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1293:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1294:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1295:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1296:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1297:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1298:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1299:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1300:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1301:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1302:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1303:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1304:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1305:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1306:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1307:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1308:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1309:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1310:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1311:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1312:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1313:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1314:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1315:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1316:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1317:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1318:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1319:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1320:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1321:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
1322:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1323:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1324:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1325:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1326:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1327:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1328:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1329:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1330:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } FPU_Type;
1331:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1332:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1333:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1334:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1335:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1336:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1337:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1338:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1339:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1340:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1341:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1342:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1343:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1344:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1345:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1346:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1347:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1348:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1349:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1350:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1351:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1352:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1353:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1354:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1355:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1356:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1357:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1358:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1359:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1360:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1361:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1362:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1363:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1364:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1365:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1366:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1367:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1368:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1369:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1370:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1371:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1372:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1373:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1374:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1375:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1376:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1377:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1378:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1379:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1380:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1381:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1382:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1383:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1384:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1385:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1386:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1387:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1388:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1389:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1390:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1391:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1392:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1393:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1394:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1395:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1396:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1397:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1398:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1399:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1400:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1401:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1402:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1403:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1404:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1405:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1406:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1407:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1408:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1409:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1410:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1411:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1412:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1413:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1414:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1415:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1416:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1417:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1418:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1419:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1420:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1421:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1422:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1423:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1424:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1425:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1426:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1427:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1428:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1429:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1430:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1431:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1432:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1433:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** typedef struct
1434:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1435:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1436:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1437:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1438:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1439:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** } CoreDebug_Type;
1440:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1441:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1442:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1443:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1444:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1445:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1446:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1447:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1448:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1449:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1450:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1451:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1452:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1453:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1454:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1455:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1456:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1457:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1458:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1459:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1460:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1461:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1462:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1463:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1464:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1465:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1466:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1467:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1468:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1469:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1470:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1471:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1472:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1473:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1474:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1475:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1476:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1477:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1478:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1479:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1480:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1481:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1482:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1483:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1484:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1485:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1486:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1487:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1488:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1489:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1490:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1491:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1492:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1493:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1494:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1495:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1496:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1497:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1498:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1499:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1500:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1501:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1502:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1503:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1504:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1505:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1506:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1507:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1508:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1509:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1510:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1511:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1512:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1513:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1514:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1515:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1516:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1517:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1518:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1519:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1520:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1521:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1522:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1523:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1524:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1525:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1526:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1527:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1528:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1529:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1530:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1531:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1532:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1533:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1534:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1535:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1536:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1537:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1538:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1539:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return           Masked and shifted value.
1540:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** */
1541:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1542:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1543:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1544:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1545:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1546:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1547:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1548:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** */
1549:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1550:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1551:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1552:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1553:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1554:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1555:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1556:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1557:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1558:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1559:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1560:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1561:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1562:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1563:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1564:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1565:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1566:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1567:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1568:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1569:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1570:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1571:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1572:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1573:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1574:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1575:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1576:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1577:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1578:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1579:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1580:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1581:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1582:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1583:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif
1584:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1585:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1586:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1587:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1588:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} */
1589:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1590:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1591:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1592:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1593:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup   CMSIS_register_aliases     Backwards Compatibility Aliases
1594:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief      Register alias definitions for backwards compatibility.
1595:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1596:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1597:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1598:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* Capitalize ITM_TCR Register Definitions */
1599:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1600:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
1601:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos           (ITM_TCR_TRACEBUSID_Pos)     /*!< \deprecated ITM_TCR_Trac
1602:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk           (ITM_TCR_TRACEBUSID_Msk)     /*!< \deprecated ITM_TCR_Trac
1603:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1604:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos           (ITM_TCR_TSPRESCALE_Pos)     /*!< \deprecated ITM_TCR_TSPr
1605:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk           (ITM_TCR_TSPRESCALE_Msk)     /*!< \deprecated ITM_TCR_TSPr
1606:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1607:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
1608:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos              (ITM_LSR_BYTEACC_Pos)        /*!< \deprecated ITM_LSR_Byte
1609:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk              (ITM_LSR_BYTEACC_Msk)        /*!< \deprecated ITM_LSR_Byte
1610:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1611:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_Access_Pos               (ITM_LSR_ACCESS_Pos)         /*!< \deprecated ITM_LSR_Acce
1612:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_Access_Msk               (ITM_LSR_ACCESS_Msk)         /*!< \deprecated ITM_LSR_Acce
1613:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1614:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_Present_Pos              (ITM_LSR_PRESENT_Pos)        /*!< \deprecated ITM_LSR_Pres
1615:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define ITM_LSR_Present_Msk              (ITM_LSR_PRESENT_Msk)        /*!< \deprecated ITM_LSR_Pres
1616:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1617:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*@} */
1618:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1619:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1620:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1621:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /*******************************************************************************
1622:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1623:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   Core Function Interface contains:
1624:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core NVIC Functions
1625:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core SysTick Functions
1626:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core Debug Functions
1627:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   - Core Register Access Functions
1628:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  ******************************************************************************/
1629:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1630:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1631:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** */
1632:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1633:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1634:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1635:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1636:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1637:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1638:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1639:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1640:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   @{
1641:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1642:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1643:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1644:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1645:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1646:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
1647:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1648:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #else
1649:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1650:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1651:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1652:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1653:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1654:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1655:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1656:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1657:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1658:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1659:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1660:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1661:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1662:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1663:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1664:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1665:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1666:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #endif
1667:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1668:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #else
1669:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1670:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1671:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1672:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1673:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1674:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1675:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1676:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1677:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1678:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1679:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1680:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1681:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1682:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1683:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1684:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1685:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1686:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Set Priority Grouping
1687:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1688:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1689:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            Only values from 0..7 are used.
1690:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1691:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1692:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1693:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1694:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1695:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1696:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t reg_value;
1697:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1698:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1699:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1700:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1701:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1702:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1703:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1704:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1705:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1706:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1707:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1708:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1709:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Get Priority Grouping
1710:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1711:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1712:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1713:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1714:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1715:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1716:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** }
1717:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1718:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** 
1719:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** /**
1720:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \brief   Enable Interrupt
1721:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1722:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1723:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   \note    IRQn must not be negative.
1724:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****  */
1725:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 134              		.loc 2 1725 22 view .LVU41
 135              	.LBB25:
1726:./CMSIS_5/CMSIS/Core/Include/core_cm4.h **** {
1727:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
 136              		.loc 2 1727 3 view .LVU42
1728:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****   {
1729:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __COMPILER_BARRIER();
 137              		.loc 2 1729 5 view .LVU43
1730:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 138              		.loc 2 1730 5 view .LVU44
 139              		.loc 2 1730 43 is_stmt 0 view .LVU45
 140 004c 304B     		ldr	r3, .L9+16
 141 004e 4FF40075 		mov	r5, #512
 142 0052 1D60     		str	r5, [r3]
1731:./CMSIS_5/CMSIS/Core/Include/core_cm4.h ****     __COMPILER_BARRIER();
 143              		.loc 2 1731 5 is_stmt 1 view .LVU46
 144              	.LVL1:
 145              		.loc 2 1731 5 is_stmt 0 view .LVU47
 146              	.LBE25:
 147              	.LBE24:
 327:task3.c       **** 
 328:task3.c       ****     // Clear to ensure the timer counter is 0.
 329:task3.c       ****     NRF_TIMER1->TASKS_CLEAR = TIMER_TASKS_CLEAR_TASKS_CLEAR_Trigger << TIMER_TASKS_CLEAR_TASKS_CLEA
 148              		.loc 1 329 5 is_stmt 1 view .LVU48
 149              	.LBE27:
 150              	.LBE33:
  43:task3.c       ****                           (0 << TWIM_PSEL_SCL_PORT_Pos) |
 151              		.loc 1 43 25 is_stmt 0 view .LVU49
 152 0054 2F4B     		ldr	r3, .L9+20
  66:task3.c       ****     // Store the value representing the active operation mode in our TX buffer.
 153              		.loc 1 66 21 view .LVU50
 154 0056 3048     		ldr	r0, .L9+24
 155              	.LBB34:
 156              	.LBB28:
 157              		.loc 1 329 29 view .LVU51
 158 0058 0124     		movs	r4, #1
 330:task3.c       **** 
 331:task3.c       ****     // Set target count value (when to trigger the interrupt).
 332:task3.c       ****     NRF_TIMER1->CC[0] = 31250; // 500ms
 159              		.loc 1 332 23 view .LVU52
 160 005a 47F6122E 		movw	lr, #31250
 329:task3.c       **** 
 161              		.loc 1 329 29 view .LVU53
 162 005e CC60     		str	r4, [r1, #12]
 163              		.loc 1 332 5 is_stmt 1 view .LVU54
 164              		.loc 1 332 23 is_stmt 0 view .LVU55
 165 0060 C1F840E5 		str	lr, [r1, #1344]
 333:task3.c       **** 
 334:task3.c       ****     // Start timer.
 335:task3.c       ****     NRF_TIMER1->TASKS_START = TIMER_TASKS_START_TASKS_START_Trigger << TIMER_TASKS_START_TASKS_STAR
 166              		.loc 1 335 5 is_stmt 1 view .LVU56
 167              		.loc 1 335 29 is_stmt 0 view .LVU57
 168 0064 0C60     		str	r4, [r1]
 169              	.LBE28:
 170              	.LBE34:
  43:task3.c       ****                           (0 << TWIM_PSEL_SCL_PORT_Pos) |
 171              		.loc 1 43 5 is_stmt 1 view .LVU58
  43:task3.c       ****                           (0 << TWIM_PSEL_SCL_PORT_Pos) |
 172              		.loc 1 43 25 is_stmt 0 view .LVU59
 173 0066 1B21     		movs	r1, #27
 174 0068 C3F80815 		str	r1, [r3, #1288]
  47:task3.c       ****                           (0 << TWIM_PSEL_SDA_PORT_Pos) |
 175              		.loc 1 47 5 is_stmt 1 view .LVU60
  47:task3.c       ****                           (0 << TWIM_PSEL_SDA_PORT_Pos) |
 176              		.loc 1 47 25 is_stmt 0 view .LVU61
 177 006c 1A21     		movs	r1, #26
 178 006e C3F80C15 		str	r1, [r3, #1292]
  51:task3.c       **** 
 179              		.loc 1 51 5 is_stmt 1 view .LVU62
  51:task3.c       **** 
 180              		.loc 1 51 26 is_stmt 0 view .LVU63
 181 0072 4FF08061 		mov	r1, #67108864
 182 0076 C3F82415 		str	r1, [r3, #1316]
  54:task3.c       ****                           (GPIO_PIN_CNF_INPUT_Connect << GPIO_PIN_CNF_INPUT_Pos) |
 183              		.loc 1 54 5 is_stmt 1 view .LVU64
  54:task3.c       ****                           (GPIO_PIN_CNF_INPUT_Connect << GPIO_PIN_CNF_INPUT_Pos) |
 184              		.loc 1 54 25 is_stmt 0 view .LVU65
 185 007a 40F20C67 		movw	r7, #1548
  66:task3.c       ****     // Store the value representing the active operation mode in our TX buffer.
 186              		.loc 1 66 21 view .LVU66
 187 007e 2A21     		movs	r1, #42
  54:task3.c       ****                           (GPIO_PIN_CNF_INPUT_Connect << GPIO_PIN_CNF_INPUT_Pos) |
 188              		.loc 1 54 25 view .LVU67
 189 0080 CCF86C77 		str	r7, [ip, #1900]
  59:task3.c       ****                           (GPIO_PIN_CNF_INPUT_Connect << GPIO_PIN_CNF_INPUT_Pos) |
 190              		.loc 1 59 5 is_stmt 1 view .LVU68
  59:task3.c       ****                           (GPIO_PIN_CNF_INPUT_Connect << GPIO_PIN_CNF_INPUT_Pos) |
 191              		.loc 1 59 25 is_stmt 0 view .LVU69
 192 0084 CCF86877 		str	r7, [ip, #1896]
  66:task3.c       ****     // Store the value representing the active operation mode in our TX buffer.
 193              		.loc 1 66 5 is_stmt 1 view .LVU70
  66:task3.c       ****     // Store the value representing the active operation mode in our TX buffer.
 194              		.loc 1 66 21 is_stmt 0 view .LVU71
 195 0088 0170     		strb	r1, [r0]
  68:task3.c       ****     // Write the buffer contents to the accelerometer.
 196              		.loc 1 68 5 is_stmt 1 view .LVU72
 197              	.LBB35:
 198              	.LBB36:
 191:task3.c       ****     // Set the number of bytes we want to transmit.
 199              		.loc 1 191 24 is_stmt 0 view .LVU73
 200 008a 1D21     		movs	r1, #29
 201              	.LBE36:
 202              	.LBE35:
  68:task3.c       ****     // Write the buffer contents to the accelerometer.
 203              		.loc 1 68 21 view .LVU74
 204 008c 4470     		strb	r4, [r0, #1]
  70:task3.c       **** 
 205              		.loc 1 70 5 is_stmt 1 view .LVU75
 206              	.LVL2:
 207              	.LBB39:
 208              	.LBI35:
 184:task3.c       **** {
 209              		.loc 1 184 13 view .LVU76
 210              	.LBB37:
 187:task3.c       ****     // Set the shortcut to stop transmitting after the last byte.
 211              		.loc 1 187 5 view .LVU77
 187:task3.c       ****     // Set the shortcut to stop transmitting after the last byte.
 212              		.loc 1 187 23 is_stmt 0 view .LVU78
 213 008e C3F80065 		str	r6, [r3, #1280]
 189:task3.c       ****     // Set the device address in the ADDRESS register.
 214              		.loc 1 189 5 is_stmt 1 view .LVU79
 189:task3.c       ****     // Set the device address in the ADDRESS register.
 215              		.loc 1 189 23 is_stmt 0 view .LVU80
 216 0092 C3F80052 		str	r5, [r3, #512]
 191:task3.c       ****     // Set the number of bytes we want to transmit.
 217              		.loc 1 191 5 is_stmt 1 view .LVU81
 191:task3.c       ****     // Set the number of bytes we want to transmit.
 218              		.loc 1 191 24 is_stmt 0 view .LVU82
 219 0096 C3F88815 		str	r1, [r3, #1416]
 193:task3.c       ****     // Provide a pointer to a buffer where the transmit data is stored.
 220              		.loc 1 193 5 is_stmt 1 view .LVU83
 193:task3.c       ****     // Provide a pointer to a buffer where the transmit data is stored.
 221              		.loc 1 193 27 is_stmt 0 view .LVU84
 222 009a 0221     		movs	r1, #2
 223 009c C3F84815 		str	r1, [r3, #1352]
 195:task3.c       ****     // Clear events.
 224              		.loc 1 195 5 is_stmt 1 view .LVU85
 195:task3.c       ****     // Clear events.
 225              		.loc 1 195 24 is_stmt 0 view .LVU86
 226 00a0 C3F84405 		str	r0, [r3, #1348]
 197:task3.c       ****     NRF_TWIM0->EVENTS_ERROR = TWIM_EVENTS_ERROR_EVENTS_ERROR_NotGenerated << TWIM_EVENTS_ERROR_EVEN
 227              		.loc 1 197 5 is_stmt 1 view .LVU87
 197:task3.c       ****     NRF_TWIM0->EVENTS_ERROR = TWIM_EVENTS_ERROR_EVENTS_ERROR_NotGenerated << TWIM_EVENTS_ERROR_EVEN
 228              		.loc 1 197 31 is_stmt 0 view .LVU88
 229 00a4 C3F80421 		str	r2, [r3, #260]
 198:task3.c       **** 
 230              		.loc 1 198 5 is_stmt 1 view .LVU89
 198:task3.c       **** 
 231              		.loc 1 198 29 is_stmt 0 view .LVU90
 232 00a8 C3F82421 		str	r2, [r3, #292]
 201:task3.c       **** 
 233              		.loc 1 201 5 is_stmt 1 view .LVU91
 201:task3.c       **** 
 234              		.loc 1 201 30 is_stmt 0 view .LVU92
 235 00ac 9C60     		str	r4, [r3, #8]
 204:task3.c       **** 
 236              		.loc 1 204 5 is_stmt 1 view .LVU93
 237              	.L2:
 204:task3.c       **** 
 238              		.loc 1 204 38 discriminator 1 view .LVU94
 204:task3.c       **** 
 239              		.loc 1 204 21 is_stmt 0 discriminator 1 view .LVU95
 240 00ae D3F80421 		ldr	r2, [r3, #260]
 204:task3.c       **** 
 241              		.loc 1 204 38 discriminator 1 view .LVU96
 242 00b2 012A     		cmp	r2, #1
 243 00b4 FBD1     		bne	.L2
 207:task3.c       **** }
 244              		.loc 1 207 5 is_stmt 1 view .LVU97
 207:task3.c       **** }
 245              		.loc 1 207 23 is_stmt 0 view .LVU98
 246 00b6 0024     		movs	r4, #0
 247              	.LBE37:
 248              	.LBE39:
  73:task3.c       ****     // Store the value representing the +/- 2g range in our TX buffer.
 249              		.loc 1 73 21 view .LVU99
 250 00b8 0E21     		movs	r1, #14
 251              	.LBB40:
 252              	.LBB38:
 207:task3.c       **** }
 253              		.loc 1 207 23 view .LVU100
 254 00ba C3F80045 		str	r4, [r3, #1280]
 255              	.LVL3:
 207:task3.c       **** }
 256              		.loc 1 207 23 view .LVU101
 257              	.LBE38:
 258              	.LBE40:
  73:task3.c       ****     // Store the value representing the +/- 2g range in our TX buffer.
 259              		.loc 1 73 5 is_stmt 1 view .LVU102
  73:task3.c       ****     // Store the value representing the +/- 2g range in our TX buffer.
 260              		.loc 1 73 21 is_stmt 0 view .LVU103
 261 00be 0170     		strb	r1, [r0]
  75:task3.c       ****     // Write the buffer contents to the accelerometer.
 262              		.loc 1 75 5 is_stmt 1 view .LVU104
 263              	.LBB41:
 264              	.LBB42:
 187:task3.c       ****     // Set the shortcut to stop transmitting after the last byte.
 265              		.loc 1 187 23 is_stmt 0 view .LVU105
 266 00c0 0621     		movs	r1, #6
 267              	.LBE42:
 268              	.LBE41:
  75:task3.c       ****     // Write the buffer contents to the accelerometer.
 269              		.loc 1 75 21 view .LVU106
 270 00c2 4470     		strb	r4, [r0, #1]
  77:task3.c       **** 
 271              		.loc 1 77 5 is_stmt 1 view .LVU107
 272              	.LVL4:
 273              	.LBB44:
 274              	.LBI41:
 184:task3.c       **** {
 275              		.loc 1 184 13 view .LVU108
 276              	.LBB43:
 187:task3.c       ****     // Set the shortcut to stop transmitting after the last byte.
 277              		.loc 1 187 5 view .LVU109
 187:task3.c       ****     // Set the shortcut to stop transmitting after the last byte.
 278              		.loc 1 187 23 is_stmt 0 view .LVU110
 279 00c4 C3F80015 		str	r1, [r3, #1280]
 189:task3.c       ****     // Set the device address in the ADDRESS register.
 280              		.loc 1 189 5 is_stmt 1 view .LVU111
 189:task3.c       ****     // Set the device address in the ADDRESS register.
 281              		.loc 1 189 23 is_stmt 0 view .LVU112
 282 00c8 4FF40071 		mov	r1, #512
 283 00cc C3F80012 		str	r1, [r3, #512]
 191:task3.c       ****     // Set the number of bytes we want to transmit.
 284              		.loc 1 191 5 is_stmt 1 view .LVU113
 191:task3.c       ****     // Set the number of bytes we want to transmit.
 285              		.loc 1 191 24 is_stmt 0 view .LVU114
 286 00d0 1D21     		movs	r1, #29
 287 00d2 C3F88815 		str	r1, [r3, #1416]
 193:task3.c       ****     // Provide a pointer to a buffer where the transmit data is stored.
 288              		.loc 1 193 5 is_stmt 1 view .LVU115
 193:task3.c       ****     // Provide a pointer to a buffer where the transmit data is stored.
 289              		.loc 1 193 27 is_stmt 0 view .LVU116
 290 00d6 0221     		movs	r1, #2
 291 00d8 C3F84815 		str	r1, [r3, #1352]
 195:task3.c       ****     // Clear events.
 292              		.loc 1 195 5 is_stmt 1 view .LVU117
 204:task3.c       **** 
 293              		.loc 1 204 21 is_stmt 0 discriminator 1 view .LVU118
 294 00dc 0D49     		ldr	r1, .L9+20
 195:task3.c       ****     // Clear events.
 295              		.loc 1 195 24 view .LVU119
 296 00de C3F84405 		str	r0, [r3, #1348]
 197:task3.c       ****     NRF_TWIM0->EVENTS_ERROR = TWIM_EVENTS_ERROR_EVENTS_ERROR_NotGenerated << TWIM_EVENTS_ERROR_EVEN
 297              		.loc 1 197 5 is_stmt 1 view .LVU120
 197:task3.c       ****     NRF_TWIM0->EVENTS_ERROR = TWIM_EVENTS_ERROR_EVENTS_ERROR_NotGenerated << TWIM_EVENTS_ERROR_EVEN
 298              		.loc 1 197 31 is_stmt 0 view .LVU121
 299 00e2 C3F80441 		str	r4, [r3, #260]
 198:task3.c       **** 
 300              		.loc 1 198 5 is_stmt 1 view .LVU122
 198:task3.c       **** 
 301              		.loc 1 198 29 is_stmt 0 view .LVU123
 302 00e6 C3F82441 		str	r4, [r3, #292]
 201:task3.c       **** 
 303              		.loc 1 201 5 is_stmt 1 view .LVU124
 201:task3.c       **** 
 304              		.loc 1 201 30 is_stmt 0 view .LVU125
 305 00ea 9A60     		str	r2, [r3, #8]
 204:task3.c       **** 
 306              		.loc 1 204 5 is_stmt 1 view .LVU126
 307              	.L3:
 204:task3.c       **** 
 308              		.loc 1 204 38 discriminator 1 view .LVU127
 204:task3.c       **** 
 309              		.loc 1 204 21 is_stmt 0 discriminator 1 view .LVU128
 310 00ec D1F80431 		ldr	r3, [r1, #260]
 204:task3.c       **** 
 311              		.loc 1 204 38 discriminator 1 view .LVU129
 312 00f0 012B     		cmp	r3, #1
 313 00f2 FBD1     		bne	.L3
 207:task3.c       **** }
 314              		.loc 1 207 5 is_stmt 1 view .LVU130
 207:task3.c       **** }
 315              		.loc 1 207 23 is_stmt 0 view .LVU131
 316 00f4 0023     		movs	r3, #0
 317 00f6 C1F80035 		str	r3, [r1, #1280]
 318              	.LVL5:
 319              	.L4:
 207:task3.c       **** }
 320              		.loc 1 207 23 view .LVU132
 321              	.LBE43:
 322              	.LBE44:
  80:task3.c       ****     {
 323              		.loc 1 80 5 is_stmt 1 view .LVU133
  84:task3.c       ****     }
 324              		.loc 1 84 9 discriminator 1 view .LVU134
 325              		.syntax unified
 326              	@ 84 "task3.c" 1
 327 00fa 30BF     		wfi
 328              	@ 0 "" 2
  80:task3.c       ****     {
 329              		.loc 1 80 11 view .LVU135
 330              		.thumb
 331              		.syntax unified
 332 00fc FDE7     		b	.L4
 333              	.L10:
 334 00fe 00BF     		.align	2
 335              	.L9:
 336 0100 00200040 		.word	1073750016
 337 0104 00E0D701 		.word	30924800
 338 0108 00800040 		.word	1073774592
 339 010c 00900040 		.word	1073778688
 340 0110 00E100E0 		.word	-536813312
 341 0114 00300040 		.word	1073754112
 342 0118 00000000 		.word	write_buffer
 343              		.cfi_endproc
 344              	.LFE135:
 346              		.section	.rodata.TIMER1_IRQHandler.str1.4,"aMS",%progbits,1
 347              		.align	2
 348              	.LC0:
 349 0000 61636358 		.ascii	"accX = %d   accY = %d   accZ = %d\012\000"
 349      203D2025 
 349      64202020 
 349      61636359 
 349      203D2025 
 350 0023 00       		.align	2
 351              	.LC1:
 352 0024 58206178 		.ascii	"X axis is UP!\012\000"
 352      69732069 
 352      73205550 
 352      210A00
 353 0033 00       		.align	2
 354              	.LC2:
 355 0034 58206178 		.ascii	"X axis is DOWN!\012\000"
 355      69732069 
 355      7320444F 
 355      574E210A 
 355      00
 356 0045 000000   		.align	2
 357              	.LC3:
 358 0048 59206178 		.ascii	"Y axis is UP!\012\000"
 358      69732069 
 358      73205550 
 358      210A00
 359 0057 00       		.align	2
 360              	.LC4:
 361 0058 59206178 		.ascii	"Y axis is DOWN!\012\000"
 361      69732069 
 361      7320444F 
 361      574E210A 
 361      00
 362 0069 000000   		.align	2
 363              	.LC5:
 364 006c 5A206178 		.ascii	"Z axis is UP!\012\000"
 364      69732069 
 364      73205550 
 364      210A00
 365 007b 00       		.align	2
 366              	.LC6:
 367 007c 5A206178 		.ascii	"Z axis is DOWN!\012\000"
 367      69732069 
 367      7320444F 
 367      574E210A 
 367      00
 368              		.section	.text.TIMER1_IRQHandler,"ax",%progbits
 369              		.align	1
 370              		.p2align 2,,3
 371              		.global	TIMER1_IRQHandler
 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 376              	TIMER1_IRQHandler:
 377              	.LFB136:
  91:task3.c       ****     // Check if our specific event triggered the interrupt.
 378              		.loc 1 91 1 view -0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
  93:task3.c       ****     {
 382              		.loc 1 93 5 view .LVU137
  93:task3.c       ****     {
 383              		.loc 1 93 36 is_stmt 0 view .LVU138
 384 0000 544A     		ldr	r2, .L51
 385 0002 D2F84031 		ldr	r3, [r2, #320]
  93:task3.c       ****     {
 386              		.loc 1 93 8 view .LVU139
 387 0006 DB07     		lsls	r3, r3, #31
 388 0008 5CD5     		bpl	.L46
 389              	.LBB45:
  96:task3.c       **** 
 390              		.loc 1 96 9 is_stmt 1 view .LVU140
 391              	.LBE45:
  91:task3.c       ****     // Check if our specific event triggered the interrupt.
 392              		.loc 1 91 1 is_stmt 0 view .LVU141
 393 000a 70B5     		push	{r4, r5, r6, lr}
 394              		.cfi_def_cfa_offset 16
 395              		.cfi_offset 4, -16
 396              		.cfi_offset 5, -12
 397              		.cfi_offset 6, -8
 398              		.cfi_offset 14, -4
 399              	.LBB54:
 400              	.LBB46:
 401              	.LBB47:
 245:task3.c       ****     // Set the shortcut to start receiving after the last byte is transmitted
 402              		.loc 1 245 23 view .LVU142
 403 000c 524B     		ldr	r3, .L51+4
 404              	.LBE47:
 405              	.LBE46:
 100:task3.c       **** 
 406              		.loc 1 100 25 view .LVU143
 407 000e 534D     		ldr	r5, .L51+8
 408              	.LBB51:
 409              	.LBB48:
 259:task3.c       ****     // Clear events.
 410              		.loc 1 259 26 view .LVU144
 411 0010 5349     		ldr	r1, .L51+12
 412              	.LBE48:
 413              	.LBE51:
  96:task3.c       **** 
 414              		.loc 1 96 39 view .LVU145
 415 0012 0024     		movs	r4, #0
 416 0014 C2F84041 		str	r4, [r2, #320]
 100:task3.c       **** 
 417              		.loc 1 100 9 is_stmt 1 view .LVU146
 100:task3.c       **** 
 418              		.loc 1 100 25 is_stmt 0 view .LVU147
 419 0018 0120     		movs	r0, #1
 420              	.LBB52:
 421              	.LBB49:
 245:task3.c       ****     // Set the shortcut to start receiving after the last byte is transmitted
 422              		.loc 1 245 23 view .LVU148
 423 001a 0622     		movs	r2, #6
 248:task3.c       ****                         TWIM_SHORTS_LASTRX_STOP_Enabled << TWIM_SHORTS_LASTRX_STOP_Pos;
 424              		.loc 1 248 23 view .LVU149
 425 001c 4FF48456 		mov	r6, #4224
 426              	.LBE49:
 427              	.LBE52:
 100:task3.c       **** 
 428              		.loc 1 100 25 view .LVU150
 429 0020 2870     		strb	r0, [r5]
 104:task3.c       **** 
 430              		.loc 1 104 9 is_stmt 1 view .LVU151
 431              	.LVL6:
 432              	.LBB53:
 433              	.LBI46:
 242:task3.c       **** {
 434              		.loc 1 242 13 view .LVU152
 435              	.LBB50:
 245:task3.c       ****     // Set the shortcut to start receiving after the last byte is transmitted
 436              		.loc 1 245 5 view .LVU153
 245:task3.c       ****     // Set the shortcut to start receiving after the last byte is transmitted
 437              		.loc 1 245 23 is_stmt 0 view .LVU154
 438 0022 C3F80025 		str	r2, [r3, #1280]
 248:task3.c       ****                         TWIM_SHORTS_LASTRX_STOP_Enabled << TWIM_SHORTS_LASTRX_STOP_Pos;
 439              		.loc 1 248 5 is_stmt 1 view .LVU155
 248:task3.c       ****                         TWIM_SHORTS_LASTRX_STOP_Enabled << TWIM_SHORTS_LASTRX_STOP_Pos;
 440              		.loc 1 248 23 is_stmt 0 view .LVU156
 441 0026 C3F80062 		str	r6, [r3, #512]
 251:task3.c       ****     // Set the number of bytes we want to transmit.
 442              		.loc 1 251 5 is_stmt 1 view .LVU157
 251:task3.c       ****     // Set the number of bytes we want to transmit.
 443              		.loc 1 251 24 is_stmt 0 view .LVU158
 444 002a 1D26     		movs	r6, #29
 445 002c C3F88865 		str	r6, [r3, #1416]
 253:task3.c       ****     // Provide a pointer to a buffer where the transmit data is stored.
 446              		.loc 1 253 5 is_stmt 1 view .LVU159
 253:task3.c       ****     // Provide a pointer to a buffer where the transmit data is stored.
 447              		.loc 1 253 27 is_stmt 0 view .LVU160
 448 0030 C3F84805 		str	r0, [r3, #1352]
 255:task3.c       ****     // Set the number of bytes we want to receive.
 449              		.loc 1 255 5 is_stmt 1 view .LVU161
 255:task3.c       ****     // Set the number of bytes we want to receive.
 450              		.loc 1 255 24 is_stmt 0 view .LVU162
 451 0034 C3F84455 		str	r5, [r3, #1348]
 257:task3.c       ****     // Provide a pointer to a buffer where the received data can be stored.
 452              		.loc 1 257 5 is_stmt 1 view .LVU163
 257:task3.c       ****     // Provide a pointer to a buffer where the received data can be stored.
 453              		.loc 1 257 27 is_stmt 0 view .LVU164
 454 0038 C3F83825 		str	r2, [r3, #1336]
 259:task3.c       ****     // Clear events.
 455              		.loc 1 259 5 is_stmt 1 view .LVU165
 259:task3.c       ****     // Clear events.
 456              		.loc 1 259 24 is_stmt 0 view .LVU166
 457 003c C3F83415 		str	r1, [r3, #1332]
 261:task3.c       ****     NRF_TWIM0->EVENTS_ERROR = TWIM_EVENTS_ERROR_EVENTS_ERROR_NotGenerated << TWIM_EVENTS_ERROR_EVEN
 458              		.loc 1 261 5 is_stmt 1 view .LVU167
 261:task3.c       ****     NRF_TWIM0->EVENTS_ERROR = TWIM_EVENTS_ERROR_EVENTS_ERROR_NotGenerated << TWIM_EVENTS_ERROR_EVEN
 459              		.loc 1 261 31 is_stmt 0 view .LVU168
 460 0040 C3F80441 		str	r4, [r3, #260]
 262:task3.c       **** 
 461              		.loc 1 262 5 is_stmt 1 view .LVU169
 262:task3.c       **** 
 462              		.loc 1 262 29 is_stmt 0 view .LVU170
 463 0044 C3F82441 		str	r4, [r3, #292]
 265:task3.c       **** 
 464              		.loc 1 265 5 is_stmt 1 view .LVU171
 265:task3.c       **** 
 465              		.loc 1 265 30 is_stmt 0 view .LVU172
 466 0048 9860     		str	r0, [r3, #8]
 268:task3.c       **** 
 467              		.loc 1 268 5 is_stmt 1 view .LVU173
 468              	.L13:
 268:task3.c       **** 
 469              		.loc 1 268 38 discriminator 1 view .LVU174
 268:task3.c       **** 
 470              		.loc 1 268 21 is_stmt 0 discriminator 1 view .LVU175
 471 004a D3F80421 		ldr	r2, [r3, #260]
 268:task3.c       **** 
 472              		.loc 1 268 38 discriminator 1 view .LVU176
 473 004e 012A     		cmp	r2, #1
 474 0050 FBD1     		bne	.L13
 271:task3.c       **** }
 475              		.loc 1 271 5 is_stmt 1 view .LVU177
 271:task3.c       **** }
 476              		.loc 1 271 23 is_stmt 0 view .LVU178
 477 0052 0022     		movs	r2, #0
 478 0054 C3F80025 		str	r2, [r3, #1280]
 479              	.LVL7:
 271:task3.c       **** }
 480              		.loc 1 271 23 view .LVU179
 481              	.LBE50:
 482              	.LBE53:
 107:task3.c       ****         int16_t accX = (xval > 2047) ? xval - 4096 : xval;
 483              		.loc 1 107 9 is_stmt 1 view .LVU180
 107:task3.c       ****         int16_t accX = (xval > 2047) ? xval - 4096 : xval;
 484              		.loc 1 107 36 is_stmt 0 view .LVU181
 485 0058 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 107:task3.c       ****         int16_t accX = (xval > 2047) ? xval - 4096 : xval;
 486              		.loc 1 107 58 view .LVU182
 487 005a 4C78     		ldrb	r4, [r1, #1]	@ zero_extendqisi2
 119:task3.c       **** 
 488              		.loc 1 119 9 view .LVU183
 489 005c 4148     		ldr	r0, .L51+16
 107:task3.c       ****         int16_t accX = (xval > 2047) ? xval - 4096 : xval;
 490              		.loc 1 107 45 view .LVU184
 491 005e 2409     		lsrs	r4, r4, #4
 492 0060 44EA0314 		orr	r4, r4, r3, lsl #4
 493              	.LVL8:
 108:task3.c       **** 
 494              		.loc 1 108 9 is_stmt 1 view .LVU185
 111:task3.c       ****         int16_t accY = (yval > 2047) ? yval - 4096 : yval;
 495              		.loc 1 111 36 is_stmt 0 view .LVU186
 496 0064 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 111:task3.c       ****         int16_t accY = (yval > 2047) ? yval - 4096 : yval;
 497              		.loc 1 111 58 view .LVU187
 498 0066 CD78     		ldrb	r5, [r1, #3]	@ zero_extendqisi2
 111:task3.c       ****         int16_t accY = (yval > 2047) ? yval - 4096 : yval;
 499              		.loc 1 111 45 view .LVU188
 500 0068 2D09     		lsrs	r5, r5, #4
 501 006a 45EA0315 		orr	r5, r5, r3, lsl #4
 108:task3.c       **** 
 502              		.loc 1 108 17 view .LVU189
 503 006e B4F5006F 		cmp	r4, #2048
 115:task3.c       ****         int16_t accZ = (zval > 2047) ? zval - 4096 : zval;
 504              		.loc 1 115 36 view .LVU190
 505 0072 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 115:task3.c       ****         int16_t accZ = (zval > 2047) ? zval - 4096 : zval;
 506              		.loc 1 115 58 view .LVU191
 507 0074 4E79     		ldrb	r6, [r1, #5]	@ zero_extendqisi2
 108:task3.c       **** 
 508              		.loc 1 108 45 discriminator 1 view .LVU192
 509 0076 A4BF     		itt	ge
 510 0078 A4F58054 		subge	r4, r4, #4096
 511              	.LVL9:
 108:task3.c       **** 
 512              		.loc 1 108 17 discriminator 1 view .LVU193
 513 007c 24B2     		sxthge	r4, r4
 514              	.LVL10:
 111:task3.c       ****         int16_t accY = (yval > 2047) ? yval - 4096 : yval;
 515              		.loc 1 111 9 is_stmt 1 view .LVU194
 112:task3.c       **** 
 516              		.loc 1 112 9 view .LVU195
 115:task3.c       ****         int16_t accZ = (zval > 2047) ? zval - 4096 : zval;
 517              		.loc 1 115 45 is_stmt 0 view .LVU196
 518 007e 3609     		lsrs	r6, r6, #4
 112:task3.c       **** 
 519              		.loc 1 112 17 view .LVU197
 520 0080 B5F5006F 		cmp	r5, #2048
 115:task3.c       ****         int16_t accZ = (zval > 2047) ? zval - 4096 : zval;
 521              		.loc 1 115 45 view .LVU198
 522 0084 46EA0316 		orr	r6, r6, r3, lsl #4
 112:task3.c       **** 
 523              		.loc 1 112 45 discriminator 1 view .LVU199
 524 0088 A4BF     		itt	ge
 525 008a A5F58055 		subge	r5, r5, #4096
 526              	.LVL11:
 112:task3.c       **** 
 527              		.loc 1 112 17 discriminator 1 view .LVU200
 528 008e 2DB2     		sxthge	r5, r5
 529              	.LVL12:
 115:task3.c       ****         int16_t accZ = (zval > 2047) ? zval - 4096 : zval;
 530              		.loc 1 115 9 is_stmt 1 view .LVU201
 116:task3.c       **** 
 531              		.loc 1 116 9 view .LVU202
 116:task3.c       **** 
 532              		.loc 1 116 17 is_stmt 0 view .LVU203
 533 0090 B6F5006F 		cmp	r6, #2048
 116:task3.c       **** 
 534              		.loc 1 116 45 discriminator 1 view .LVU204
 535 0094 A4BF     		itt	ge
 536 0096 A6F58056 		subge	r6, r6, #4096
 537              	.LVL13:
 116:task3.c       **** 
 538              		.loc 1 116 17 discriminator 1 view .LVU205
 539 009a 36B2     		sxthge	r6, r6
 540              	.LVL14:
 119:task3.c       **** 
 541              		.loc 1 119 9 is_stmt 1 view .LVU206
 542 009c 3346     		mov	r3, r6
 119:task3.c       **** 
 543              		.loc 1 119 9 is_stmt 0 view .LVU207
 544 009e 2A46     		mov	r2, r5
 545 00a0 2146     		mov	r1, r4
 546 00a2 FFF7FEFF 		bl	printf_
 547              	.LVL15:
 123:task3.c       **** 
 548              		.loc 1 123 9 is_stmt 1 view .LVU208
 126:task3.c       ****         {
 549              		.loc 1 126 9 view .LVU209
 126:task3.c       ****         {
 550              		.loc 1 126 12 is_stmt 0 view .LVU210
 551 00a6 B4F5F57F 		cmp	r4, #490
 552 00aa 0CDD     		ble	.L17
 128:task3.c       ****             {
 553              		.loc 1 128 13 is_stmt 1 view .LVU211
 128:task3.c       ****             {
 554              		.loc 1 128 23 is_stmt 0 view .LVU212
 555 00ac 2E4B     		ldr	r3, .L51+20
 128:task3.c       ****             {
 556              		.loc 1 128 16 view .LVU213
 557 00ae 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 558 00b0 012A     		cmp	r2, #1
 559 00b2 22D1     		bne	.L49
 560              	.L18:
 176:task3.c       ****         // Update the target count value to trigger the interrupt again after 0.5 seconds.
 561              		.loc 1 176 9 is_stmt 1 view .LVU214
 176:task3.c       ****         // Update the target count value to trigger the interrupt again after 0.5 seconds.
 562              		.loc 1 176 33 is_stmt 0 view .LVU215
 563 00b4 274B     		ldr	r3, .L51
 564 00b6 0121     		movs	r1, #1
 178:task3.c       ****     }
 565              		.loc 1 178 27 view .LVU216
 566 00b8 47F61222 		movw	r2, #31250
 176:task3.c       ****         // Update the target count value to trigger the interrupt again after 0.5 seconds.
 567              		.loc 1 176 33 view .LVU217
 568 00bc D960     		str	r1, [r3, #12]
 178:task3.c       ****     }
 569              		.loc 1 178 9 is_stmt 1 view .LVU218
 178:task3.c       ****     }
 570              		.loc 1 178 27 is_stmt 0 view .LVU219
 571 00be C3F84025 		str	r2, [r3, #1344]
 572              	.LBE54:
 180:task3.c       **** 
 573              		.loc 1 180 1 view .LVU220
 574 00c2 70BD     		pop	{r4, r5, r6, pc}
 575              	.LVL16:
 576              	.L46:
 577              		.cfi_def_cfa_offset 0
 578              		.cfi_restore 4
 579              		.cfi_restore 5
 580              		.cfi_restore 6
 581              		.cfi_restore 14
 180:task3.c       **** 
 582              		.loc 1 180 1 view .LVU221
 583 00c4 7047     		bx	lr
 584              	.LVL17:
 585              	.L17:
 586              		.cfi_def_cfa_offset 16
 587              		.cfi_offset 4, -16
 588              		.cfi_offset 5, -12
 589              		.cfi_offset 6, -8
 590              		.cfi_offset 14, -4
 591              	.LBB55:
 134:task3.c       ****         {
 592              		.loc 1 134 14 is_stmt 1 view .LVU222
 134:task3.c       ****         {
 593              		.loc 1 134 17 is_stmt 0 view .LVU223
 594 00c6 14F5F57F 		cmn	r4, #490
 595 00ca 09DA     		bge	.L19
 136:task3.c       ****             {
 596              		.loc 1 136 13 is_stmt 1 view .LVU224
 136:task3.c       ****             {
 597              		.loc 1 136 23 is_stmt 0 view .LVU225
 598 00cc 264B     		ldr	r3, .L51+20
 136:task3.c       ****             {
 599              		.loc 1 136 16 view .LVU226
 600 00ce 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 601 00d0 022A     		cmp	r2, #2
 602 00d2 EFD0     		beq	.L18
 138:task3.c       ****                 printf("X axis is DOWN!\n");
 603              		.loc 1 138 17 is_stmt 1 view .LVU227
 138:task3.c       ****                 printf("X axis is DOWN!\n");
 604              		.loc 1 138 23 is_stmt 0 view .LVU228
 605 00d4 0222     		movs	r2, #2
 139:task3.c       ****             }
 606              		.loc 1 139 17 view .LVU229
 607 00d6 2548     		ldr	r0, .L51+24
 138:task3.c       ****                 printf("X axis is DOWN!\n");
 608              		.loc 1 138 23 view .LVU230
 609 00d8 1A70     		strb	r2, [r3]
 139:task3.c       ****             }
 610              		.loc 1 139 17 is_stmt 1 view .LVU231
 611 00da FFF7FEFF 		bl	printf_
 612              	.LVL18:
 613 00de E9E7     		b	.L18
 614              	.L19:
 142:task3.c       ****         {
 615              		.loc 1 142 14 view .LVU232
 142:task3.c       ****         {
 616              		.loc 1 142 17 is_stmt 0 view .LVU233
 617 00e0 B5F5F57F 		cmp	r5, #490
 618 00e4 0FDD     		ble	.L20
 144:task3.c       ****             {
 619              		.loc 1 144 13 is_stmt 1 view .LVU234
 144:task3.c       ****             {
 620              		.loc 1 144 23 is_stmt 0 view .LVU235
 621 00e6 204B     		ldr	r3, .L51+20
 144:task3.c       ****             {
 622              		.loc 1 144 16 view .LVU236
 623 00e8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 624 00ea 032A     		cmp	r2, #3
 625 00ec E2D0     		beq	.L18
 146:task3.c       ****                 printf("Y axis is UP!\n");
 626              		.loc 1 146 17 is_stmt 1 view .LVU237
 146:task3.c       ****                 printf("Y axis is UP!\n");
 627              		.loc 1 146 23 is_stmt 0 view .LVU238
 628 00ee 0322     		movs	r2, #3
 147:task3.c       ****             }
 629              		.loc 1 147 17 view .LVU239
 630 00f0 1F48     		ldr	r0, .L51+28
 146:task3.c       ****                 printf("Y axis is UP!\n");
 631              		.loc 1 146 23 view .LVU240
 632 00f2 1A70     		strb	r2, [r3]
 147:task3.c       ****             }
 633              		.loc 1 147 17 is_stmt 1 view .LVU241
 634 00f4 FFF7FEFF 		bl	printf_
 635              	.LVL19:
 636 00f8 DCE7     		b	.L18
 637              	.L49:
 130:task3.c       ****                 printf("X axis is UP!\n");
 638              		.loc 1 130 17 view .LVU242
 130:task3.c       ****                 printf("X axis is UP!\n");
 639              		.loc 1 130 23 is_stmt 0 view .LVU243
 640 00fa 0122     		movs	r2, #1
 131:task3.c       ****             }
 641              		.loc 1 131 17 view .LVU244
 642 00fc 1D48     		ldr	r0, .L51+32
 130:task3.c       ****                 printf("X axis is UP!\n");
 643              		.loc 1 130 23 view .LVU245
 644 00fe 1A70     		strb	r2, [r3]
 131:task3.c       ****             }
 645              		.loc 1 131 17 is_stmt 1 view .LVU246
 646 0100 FFF7FEFF 		bl	printf_
 647              	.LVL20:
 648 0104 D6E7     		b	.L18
 649              	.L20:
 150:task3.c       ****         {
 650              		.loc 1 150 14 view .LVU247
 150:task3.c       ****         {
 651              		.loc 1 150 17 is_stmt 0 view .LVU248
 652 0106 15F5F57F 		cmn	r5, #490
 653 010a 0CDB     		blt	.L50
 158:task3.c       ****         {
 654              		.loc 1 158 14 is_stmt 1 view .LVU249
 158:task3.c       ****         {
 655              		.loc 1 158 17 is_stmt 0 view .LVU250
 656 010c B6F5F57F 		cmp	r6, #490
 657 0110 13DD     		ble	.L22
 160:task3.c       ****             {
 658              		.loc 1 160 13 is_stmt 1 view .LVU251
 160:task3.c       ****             {
 659              		.loc 1 160 23 is_stmt 0 view .LVU252
 660 0112 154B     		ldr	r3, .L51+20
 160:task3.c       ****             {
 661              		.loc 1 160 16 view .LVU253
 662 0114 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 663 0116 052A     		cmp	r2, #5
 664 0118 CCD0     		beq	.L18
 162:task3.c       ****                 printf("Z axis is UP!\n");
 665              		.loc 1 162 17 is_stmt 1 view .LVU254
 162:task3.c       ****                 printf("Z axis is UP!\n");
 666              		.loc 1 162 23 is_stmt 0 view .LVU255
 667 011a 0522     		movs	r2, #5
 163:task3.c       ****             }
 668              		.loc 1 163 17 view .LVU256
 669 011c 1648     		ldr	r0, .L51+36
 162:task3.c       ****                 printf("Z axis is UP!\n");
 670              		.loc 1 162 23 view .LVU257
 671 011e 1A70     		strb	r2, [r3]
 163:task3.c       ****             }
 672              		.loc 1 163 17 is_stmt 1 view .LVU258
 673 0120 FFF7FEFF 		bl	printf_
 674              	.LVL21:
 675 0124 C6E7     		b	.L18
 676              	.L50:
 152:task3.c       ****             {
 677              		.loc 1 152 13 view .LVU259
 152:task3.c       ****             {
 678              		.loc 1 152 23 is_stmt 0 view .LVU260
 679 0126 104B     		ldr	r3, .L51+20
 152:task3.c       ****             {
 680              		.loc 1 152 16 view .LVU261
 681 0128 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 682 012a 042A     		cmp	r2, #4
 683 012c C2D0     		beq	.L18
 154:task3.c       ****                 printf("Y axis is DOWN!\n");
 684              		.loc 1 154 17 is_stmt 1 view .LVU262
 154:task3.c       ****                 printf("Y axis is DOWN!\n");
 685              		.loc 1 154 23 is_stmt 0 view .LVU263
 686 012e 0422     		movs	r2, #4
 155:task3.c       ****             }
 687              		.loc 1 155 17 view .LVU264
 688 0130 1248     		ldr	r0, .L51+40
 154:task3.c       ****                 printf("Y axis is DOWN!\n");
 689              		.loc 1 154 23 view .LVU265
 690 0132 1A70     		strb	r2, [r3]
 155:task3.c       ****             }
 691              		.loc 1 155 17 is_stmt 1 view .LVU266
 692 0134 FFF7FEFF 		bl	printf_
 693              	.LVL22:
 694 0138 BCE7     		b	.L18
 695              	.L22:
 166:task3.c       ****         {
 696              		.loc 1 166 14 view .LVU267
 166:task3.c       ****         {
 697              		.loc 1 166 17 is_stmt 0 view .LVU268
 698 013a 16F5F57F 		cmn	r6, #490
 699 013e B9DA     		bge	.L18
 168:task3.c       ****             {
 700              		.loc 1 168 13 is_stmt 1 view .LVU269
 168:task3.c       ****             {
 701              		.loc 1 168 23 is_stmt 0 view .LVU270
 702 0140 094B     		ldr	r3, .L51+20
 168:task3.c       ****             {
 703              		.loc 1 168 16 view .LVU271
 704 0142 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 705 0144 062A     		cmp	r2, #6
 706 0146 B5D0     		beq	.L18
 170:task3.c       ****                 printf("Z axis is DOWN!\n");
 707              		.loc 1 170 17 is_stmt 1 view .LVU272
 170:task3.c       ****                 printf("Z axis is DOWN!\n");
 708              		.loc 1 170 23 is_stmt 0 view .LVU273
 709 0148 0622     		movs	r2, #6
 171:task3.c       ****             }
 710              		.loc 1 171 17 view .LVU274
 711 014a 0D48     		ldr	r0, .L51+44
 170:task3.c       ****                 printf("Z axis is DOWN!\n");
 712              		.loc 1 170 23 view .LVU275
 713 014c 1A70     		strb	r2, [r3]
 171:task3.c       ****             }
 714              		.loc 1 171 17 is_stmt 1 view .LVU276
 715 014e FFF7FEFF 		bl	printf_
 716              	.LVL23:
 717 0152 AFE7     		b	.L18
 718              	.L52:
 719              		.align	2
 720              	.L51:
 721 0154 00900040 		.word	1073778688
 722 0158 00300040 		.word	1073754112
 723 015c 00000000 		.word	write_buffer
 724 0160 00000000 		.word	read_buffer
 725 0164 00000000 		.word	.LC0
 726 0168 00000000 		.word	state.0
 727 016c 34000000 		.word	.LC2
 728 0170 48000000 		.word	.LC3
 729 0174 24000000 		.word	.LC1
 730 0178 6C000000 		.word	.LC5
 731 017c 58000000 		.word	.LC4
 732 0180 7C000000 		.word	.LC6
 733              	.LBE55:
 734              		.cfi_endproc
 735              	.LFE136:
 737              		.section	.bss.state.0,"aw",%nobits
 740              	state.0:
 741 0000 00       		.space	1
 742              		.section	.bss.read_buffer,"aw",%nobits
 743              		.align	2
 746              	read_buffer:
 747 0000 00000000 		.space	6
 747      0000
 748              		.section	.bss.write_buffer,"aw",%nobits
 749              		.align	2
 752              	write_buffer:
 753 0000 0000     		.space	2
 754              		.text
 755              	.Letext0:
 756              		.file 3 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stdint.h"
 757              		.file 4 "./Include/nrf52840.h"
 758              		.file 5 "printf.h"
DEFINED SYMBOLS
                            *ABS*:00000000 task3.c
     /tmp/ccdkAesi.s:21     .text.startup.main:00000000 $t
     /tmp/ccdkAesi.s:28     .text.startup.main:00000000 main
     /tmp/ccdkAesi.s:336    .text.startup.main:00000100 $d
     /tmp/ccdkAesi.s:752    .bss.write_buffer:00000000 write_buffer
     /tmp/ccdkAesi.s:347    .rodata.TIMER1_IRQHandler.str1.4:00000000 $d
     /tmp/ccdkAesi.s:369    .text.TIMER1_IRQHandler:00000000 $t
     /tmp/ccdkAesi.s:376    .text.TIMER1_IRQHandler:00000000 TIMER1_IRQHandler
     /tmp/ccdkAesi.s:721    .text.TIMER1_IRQHandler:00000154 $d
     /tmp/ccdkAesi.s:746    .bss.read_buffer:00000000 read_buffer
     /tmp/ccdkAesi.s:740    .bss.state.0:00000000 state.0
     /tmp/ccdkAesi.s:741    .bss.state.0:00000000 $d
     /tmp/ccdkAesi.s:743    .bss.read_buffer:00000000 $d
     /tmp/ccdkAesi.s:749    .bss.write_buffer:00000000 $d
                           .group:00000000 wm4.0.6f27a92f71ef72f43351aaf5909357e4
                           .group:00000000 wm4.stdint.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:00000000 wm4.nrf.h.36.2c9771b922e05998cb98cd38e577d26d
                           .group:00000000 wm4.nrf52840.h.54.2eff2f64e4f718309725743e020c1c3e
                           .group:00000000 wm4.cmsis_version.h.32.0ac195c83bb4537824e6ad1c47474b79
                           .group:00000000 wm4.core_cm4.h.66.d954c01095d518cd043caf62225efced
                           .group:00000000 wm4.cmsis_gcc.h.26.ec732d7dec3e44b4b15b499f7fbfba3f
                           .group:00000000 wm4.core_cm4.h.186.369ba2229bf6f92b71e2ad1ae8388018
                           .group:00000000 wm4.mpu_armv7.h.32.83326921a797fa9d6f70449916b4b839
                           .group:00000000 wm4.nrf52840.h.2760.94facbe4f0b1a63284aed08b8635f538
                           .group:00000000 wm4.nrf52840_bitfields.h.36.6f0372e47edb7eb297e4f285382d0a6c
                           .group:00000000 wm4.nrf51_to_nrf52840.h.36.a52984f77ed625f80506d6aa3574a54b
                           .group:00000000 wm4.nrf52_to_nrf52840.h.36.718b4211de2aa9d86eb1b548550c2d83
                           .group:00000000 wm4.compiler_abstraction.h.36.11adf2fa28a4f329a07fa847d09bfcb7
                           .group:00000000 wm4._newlib_version.h.4.411db44ea2338a62eca2f0777f81481b
                           .group:00000000 wm4.newlib.h.27.07bf1b8b16da454ae07478107717878b
                           .group:00000000 wm4.ieeefp.h.77.5ad60f72ea25fc152400b550ac118212
                           .group:00000000 wm4.features.h.22.4e5514d51694f64cae235f84d9e565a5
                           .group:00000000 wm4.config.h.224.10ee1ad185d877c6e334e6581faab44d
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stddef.h.39.0dc9006b34572d4d9cae4c8b422c4971
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.cdefs.h.49.70fc7af612f78ddcace70fdd90b5623b
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.158.6f8e08a347b1cff664332fa350bfceb3
                           .group:00000000 wm4._types.h.127.3bdfe3ff8ea2d0985b03d9cbe93480e3
                           .group:00000000 wm4.reent.h.18.25503cdc8b7e55dd0d6ea7b3e5af7a03
                           .group:00000000 wm4.lock.h.2.c0958401bd0ce484d507ee19aacab817
                           .group:00000000 wm4.reent.h.78.7f0775353a33c852a1479c008f68cd03
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.eec8bf00b5213f43d095cb984c5f22e3
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4.inttypes.h.28.c5f35ffa6c62f217ce23d4796ab1c6e6
                           .group:00000000 wm4.stdarg.h.31.f7f4f3bfddce9ed034956076d59396f7
                           .group:00000000 wm4.printf.h.60.4e905941388f8572eb1bb13f71697bea

UNDEFINED SYMBOLS
printf_
